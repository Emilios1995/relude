[{"href": "./index.html", "title": "Home", "contents": "If you use vscode, Press Windows + Shift + B it will build automatically", "rendered": "If you use <code>vscode</code>, Press <code>Windows + Shift + B</code> it will build automatically", "breadcrumb": "Home"},
{"href": "./index.html#Editor", "title": "Editor", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html#Development-scripts", "title": "Development scripts", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html#Documentation", "title": "Documentation", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "npm install --save reazen/relude", "rendered": "<code>npm install --save reazen/relude</code>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "The library is not published to npm yet, but you can install it via a GitHub reference:", "rendered": "The library is not published to npm yet, but you can install it via a GitHub reference:", "breadcrumb": "Home"},
{"href": "./index.html#Installation", "title": "Installation", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html#Overview", "title": "Overview", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "If you have trouble installing dependencies with npm install, try removing\nthe redoc dependency in the package.json. Removing this will make the npm\nrun docs command non-functional, but this command is not essential.", "rendered": "If you have trouble installing dependencies with <code>npm install</code>, try removing\nthe <code>redoc</code> dependency in the package.json. Removing this will make the <code>npm\nrun docs</code> command non-functional, but this command is not essential.", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "This project is being actively developed, and is subject to major changes\nuntil we figure out all the conventions for APIs and project organization.\nAlso, some of the function implementations are likely not ideal and need\noptimization.", "rendered": "This project is being actively developed, and is subject to major changes\nuntil we figure out all the conventions for APIs and project organization.\nAlso, some of the function implementations are likely not ideal and need\noptimization.", "breadcrumb": "Home"},
{"href": "./index.html#Warning--WIP", "title": "Warning: WIP", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "A prelude for Bucklescript and ReasonML projects", "rendered": "A prelude for <code>Bucklescript</code> and <code>ReasonML</code> projects", "breadcrumb": "Home"},
{"href": "./index.html#Relude", "title": "Relude", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./api/Test.html#value-mapError", "title": "mapError", "contents": "mapError ", "rendered": "<h4 class='item'>let mapError: 'e1 'e2 'a0. ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) t -&gt; ('a0, 'e2) t</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Test.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#value-throw", "title": "throw", "contents": "throw t ", "rendered": "<h4 class='item'>let throw: 'e => <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#type-t", "title": "t", "contents": "t t t  t t", "rendered": "<h4 class='item'>type t('a, 'e) = \n  | Pure('a): <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)\n  | Throw('e): <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)\n  | Map('r => 'a, <a href=\"./api/Test.html#type-t\">t</a>('r, 'e)): <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)\n</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html", "title": "Test", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Test"},
{"href": "./api/Test.html", "title": "Test", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Test"},
{"href": "./api/Test.html#Test", "title": "Test", "contents": "", "rendered": "", "breadcrumb": "Test"},
{"href": "./api/Relude_Void.html#value-show", "title": "show", "contents": "Show for Void.t is absurd because there is no value of type Void.t that can be shown.", "rendered": "Show for Void.t is absurd because there is no value of type Void.t that can be shown.", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#value-show", "title": "show", "contents": "show t string ", "rendered": "<h4 class='item'>let show: <a href=\"./api/Relude_Void.html#type-t\">t</a> => string</h4>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#value-absurd", "title": "absurd", "contents": "A function that can be used when you need to provide a function from Void.t =&gt; &#39;a.\nThe function will never actually be called, because it&#39;s impossible to construct a valud of type Void.t.", "rendered": "A function that can be used when you need to provide a function from Void.t =&gt; &#39;a.\nThe function will never actually be called, because it&#39;s impossible to construct a valud of type Void.t.", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#value-absurd", "title": "absurd", "contents": "absurd t ", "rendered": "<h4 class='item'>let absurd: <a href=\"./api/Relude_Void.html#type-t\">t</a> => 'a</h4>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#type-t", "title": "t", "contents": "Void.t is a type for which it is impossible to construct a value.", "rendered": "Void.t is a type for which it is impossible to construct a value.", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#type-t", "title": "t", "contents": "t t", "rendered": "<h4 class='item'>type t = | Void(<a href=\"./api/Relude_Void.html#type-t\">t</a>)\n</h4>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html", "title": "Relude_Void", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html", "title": "Relude_Void", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#Relude_Void", "title": "Relude_Void", "contents": "", "rendered": "", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Validation.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t Errors t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t(Error.t))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  Errors t t Errors t t Errors t  ", "rendered": "<h4 class='item'>let apply: (\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a => 'a, Errors.t('a)),\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t('a))\n) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t('a))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-Apply.t", "title": "Apply.t", "contents": "t t Errors t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t(Error.t))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-Functor.t", "title": "Functor.t", "contents": "t t Errors t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t(Error.t))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-toResult", "title": "toResult", "contents": "toResult t Belt Result t ", "rendered": "<h4 class='item'>let toResult: <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b) => Belt.Result.t('a, 'b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-fromResult", "title": "fromResult", "contents": "fromResult Belt Result t t ", "rendered": "<h4 class='item'>let fromResult: Belt.Result.t('a, 'b) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-flatMapV", "title": "flatMapV", "contents": "This function performs a flatMap-like operation, but if the f fails, all previous errors are discarded.\nValidation is not a traditional Monad, because the point of it is to preserve the errors via a Semigroup.", "rendered": "This function performs a flatMap-like operation, but if the <code>f</code> fails, all previous errors are discarded.\nValidation is not a traditional Monad, because the point of it is to preserve the errors via a Semigroup.", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-flatMapV", "title": "flatMapV", "contents": "flatMapV t t  t  ", "rendered": "<h4 class='item'>let flatMapV: (<a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-apply", "title": "apply", "contents": "apply t  t   t   ", "rendered": "<h4 class='item'>let apply: (\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a => 'a, 'a),\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a),\n  ('a, 'a) => 'a\n) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-mapError", "title": "mapError", "contents": "mapError  t t  ", "rendered": "<h4 class='item'>let mapError: ('a => 'a, <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-isError", "title": "isError", "contents": "isError t bool ", "rendered": "<h4 class='item'>let isError: <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b) => bool</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-isOk", "title": "isOk", "contents": "isOk t bool ", "rendered": "<h4 class='item'>let isOk: <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b) => bool</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-t", "title": "t", "contents": "Similar to Belt.Result, but has an Applicative instance that collects the errors using a semigroup, rather than fail-fast\nsemantics.", "rendered": "Similar to Belt.Result, but has an Applicative instance that collects the errors using a semigroup, rather than fail-fast\nsemantics.", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a, 'e) = | VOk('a) | VError('e)\n</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html", "title": "Relude_Validation", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html", "title": "Relude_Validation", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#Relude_Validation", "title": "Relude_Validation", "contents": "", "rendered": "", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_String.html#value-splitList", "title": "splitList", "contents": "splitList string string list string  ", "rendered": "<h4 class='item'>let splitList: (string, string) => list(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-splitArray", "title": "splitArray", "contents": "splitArray string string array string  ", "rendered": "<h4 class='item'>let splitArray: (string, string) => array(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-sliceToEnd", "title": "sliceToEnd", "contents": "sliceToEnd int string string  ", "rendered": "<h4 class='item'>let sliceToEnd: (int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-slice", "title": "slice", "contents": "slice int int string string   ", "rendered": "<h4 class='item'>let slice: (int, int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-replaceRegex", "title": "replaceRegex", "contents": "replaceRegex Js Re t string string string   ", "rendered": "<h4 class='item'>let replaceRegex: (Js.Re.t, string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-replace", "title": "replace", "contents": "replace string string string string   ", "rendered": "<h4 class='item'>let replace: (string, string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-lastIndexOf", "title": "lastIndexOf", "contents": "lastIndexOf string string option int  ", "rendered": "<h4 class='item'>let lastIndexOf: (string, string) => option(int)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-indexOf", "title": "indexOf", "contents": "indexOf string string option int  ", "rendered": "<h4 class='item'>let indexOf: (string, string) => option(int)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-contains", "title": "contains", "contents": "contains string string bool  ", "rendered": "<h4 class='item'>let contains: (string, string) => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-startsWith", "title": "startsWith", "contents": "startsWith string string bool  ", "rendered": "<h4 class='item'>let startsWith: (string, string) => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-endsWith", "title": "endsWith", "contents": "endsWith string string bool  ", "rendered": "<h4 class='item'>let endsWith: (string, string) => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-concatList", "title": "concatList", "contents": "concatList list string string ", "rendered": "<h4 class='item'>let concatList: list(string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-concatArray", "title": "concatArray", "contents": "concatArray array string string ", "rendered": "<h4 class='item'>let concatArray: array(string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-concat", "title": "concat", "contents": "concat string string string  ", "rendered": "<h4 class='item'>let concat: (string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-foldRight", "title": "foldRight", "contents": "foldRight string   string   ", "rendered": "<h4 class='item'>let foldRight: ((string, 'b) => 'b, 'b, string) => 'b</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft string   string   ", "rendered": "<h4 class='item'>let foldLeft: (('b, string) => 'b, 'b, string) => 'b</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-map", "title": "map", "contents": "map string string  string string  ", "rendered": "<h4 class='item'>let map: (string => string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toArray", "title": "toArray", "contents": "toArray string array string ", "rendered": "<h4 class='item'>let toArray: string => array(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toList", "title": "toList", "contents": "toList string list string ", "rendered": "<h4 class='item'>let toList: string => list(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-getOrThrow", "title": "getOrThrow", "contents": "getOrThrow int string string  ", "rendered": "<h4 class='item'>let getOrThrow: (int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-getNullable", "title": "getNullable", "contents": "getNullable int string Js Nullable t string  ", "rendered": "<h4 class='item'>let getNullable: (int, string) => Js.Nullable.t(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-get", "title": "get", "contents": "get int string option string  ", "rendered": "<h4 class='item'>let get: (int, string) => option(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toLowerCase", "title": "toLowerCase", "contents": "toLowerCase string string ", "rendered": "<h4 class='item'>let toLowerCase: string => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toUpperCase", "title": "toUpperCase", "contents": "toUpperCase string string ", "rendered": "<h4 class='item'>let toUpperCase: string => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-repeat", "title": "repeat", "contents": "repeat int string string  ", "rendered": "<h4 class='item'>let repeat: (int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-makeWithIndex", "title": "makeWithIndex", "contents": "makeWithIndex int int string  string  ", "rendered": "<h4 class='item'>let makeWithIndex: (int, int => string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-fromCharCode", "title": "fromCharCode", "contents": "fromCharCode int string ", "rendered": "<h4 class='item'>let fromCharCode: int => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-make", "title": "make", "contents": "make string ", "rendered": "<h4 class='item'>let make: 'a => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toNonWhitespace", "title": "toNonWhitespace", "contents": "toNonWhitespace string option string ", "rendered": "<h4 class='item'>let toNonWhitespace: string => option(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-isWhitespace", "title": "isWhitespace", "contents": "isWhitespace string bool ", "rendered": "<h4 class='item'>let isWhitespace: string => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toNonEmpty", "title": "toNonEmpty", "contents": "toNonEmpty string option string ", "rendered": "<h4 class='item'>let toNonEmpty: string => option(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-isNotEmpty", "title": "isNotEmpty", "contents": "isNotEmpty string bool ", "rendered": "<h4 class='item'>let isNotEmpty: string => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-isEmpty", "title": "isEmpty", "contents": "isEmpty string bool ", "rendered": "<h4 class='item'>let isEmpty: string => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-trim", "title": "trim", "contents": "trim string string ", "rendered": "<h4 class='item'>let trim: string => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-length", "title": "length", "contents": "length string int ", "rendered": "<h4 class='item'>let length: string => int</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html", "title": "Relude_String", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html", "title": "Relude_String", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#Relude_String", "title": "Relude_String", "contents": "", "rendered": "", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_Sequence.html", "title": "Relude_Sequence", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Sequence"},
{"href": "./api/Relude_Sequence.html", "title": "Relude_Sequence", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Sequence"},
{"href": "./api/Relude_Sequence.html#Relude_Sequence", "title": "Relude_Sequence", "contents": "", "rendered": "", "breadcrumb": "Relude_Sequence"},
{"href": "./api/Relude_ResultIor.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Monad.t", "title": "Monad.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  E t t E t t E t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a => 'a, E.t), <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Apply.t", "title": "Apply.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Functor.t", "title": "Functor.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map5", "title": "map5", "contents": "map5      t t t t t   t       ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('d, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('e, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('f, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map4", "title": "map4", "contents": "map4     t t t t   t      ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('d, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('e, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map3", "title": "map3", "contents": "map3    t t t   t     ", "rendered": "<h4 class='item'>let map3: (\n  ('a, 'b, 'c) => 'd,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('d, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map2", "title": "map2", "contents": "map2   t t   t    ", "rendered": "<h4 class='item'>let map2: (\n  ('a, 'b) => 'c,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e), <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-apply", "title": "apply", "contents": "apply t  t   t   ", "rendered": "<h4 class='item'>let apply: (\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a => 'b, 'e),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e),\n  ('e, 'e) => 'e\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-both", "title": "both", "contents": "both t  ", "rendered": "<h4 class='item'>let both: ('a, 'e) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'e => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-t", "title": "t", "contents": "E.g. if you are doing applicative validation to construct a User model, you could parse a phone number and\nallow it, but collect a warning that certain phone number formats are deprecated.", "rendered": "E.g. if you are doing applicative validation to construct a User model, you could parse a phone number and\nallow it, but collect a warning that certain phone number formats are deprecated.", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-t", "title": "t", "contents": "ResultIor is similar to Belt.Result, but it has the ability to collect &quot;non-fatal warning&quot; information\nduring applicative validation.", "rendered": "ResultIor is similar to Belt.Result, but it has the ability to collect &quot;non-fatal warning&quot; information\nduring applicative validation.", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a, 'e) = | IOk('a) | IError('e) | IBoth('a, 'e)\n</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html", "title": "Relude_ResultIor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html", "title": "Relude_ResultIor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#Relude_ResultIor", "title": "Relude_ResultIor", "contents": "", "rendered": "", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_Result.html#value-MonadError.catchError", "title": "MonadError.catchError", "contents": "catchError Belt Result t  Belt Result t Belt Result t  ", "rendered": "<h4 class='item'>let catchError: (\n  'a => Belt.Result.t('a, 'a),\n  Belt.Result.t('a, 'a)\n) => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.throwError", "title": "MonadError.throwError", "contents": "throwError Belt Result t ", "rendered": "<h4 class='item'>let throwError: 'a => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.flat_map", "title": "MonadError.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.pure", "title": "MonadError.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.apply", "title": "MonadError.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.map", "title": "MonadError.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#type-MonadError.t", "title": "MonadError.t", "contents": "t Belt Result t E t", "rendered": "<h4 class='item'>type t('a) = Belt.Result.t('a, E.t)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadError", "title": "MonadError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.throwError", "title": "MonadThrow.throwError", "contents": "throwError Belt Result t ", "rendered": "<h4 class='item'>let throwError: 'a => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.flat_map", "title": "MonadThrow.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.pure", "title": "MonadThrow.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.apply", "title": "MonadThrow.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.map", "title": "MonadThrow.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#type-MonadThrow.t", "title": "MonadThrow.t", "contents": "t Belt Result t E t", "rendered": "<h4 class='item'>type t('a) = Belt.Result.t('a, E.t)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadThrow", "title": "MonadThrow", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-toValidationNel", "title": "toValidationNel", "contents": "toValidationNel Belt Result t Relude_Validation t List t ", "rendered": "<h4 class='item'>let toValidationNel: Belt.Result.t(\n  'a,\n  'e\n) => <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, <a href=\"./api/Relude_NonEmpty.html#module-List\" title=\"Relude_NonEmpty.List\">List</a>.<a href=\"./api/Relude_NonEmpty.html#type-List.t\">t</a>('e))</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-fromValidation", "title": "fromValidation", "contents": "fromValidation Relude_Validation t Belt Result t ", "rendered": "<h4 class='item'>let fromValidation: <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>(\n  'a,\n  'a\n) => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-toValidation", "title": "toValidation", "contents": "toValidation Belt Result t Relude_Validation t ", "rendered": "<h4 class='item'>let toValidation: Belt.Result.t(\n  'a,\n  'a\n) => <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-toOption", "title": "toOption", "contents": "toOption ", "rendered": "<h4 class='item'>let toOption: 'a0 'e0. ('a0, 'e0) Belt.Result.t -&gt; 'a0 option</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-fromOption", "title": "fromOption", "contents": "fromOption ", "rendered": "<h4 class='item'>let fromOption: 'a0 'e0. (unit -&gt; 'e0) -&gt; 'a0 option -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-recover", "title": "recover", "contents": "recover ", "rendered": "<h4 class='item'>let recover: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) Belt.Result.t -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-catchError", "title": "catchError", "contents": "catchError ", "rendered": "<h4 class='item'>let catchError: 'a0 'e0.\n  ('e0 -&gt; ('a0, 'e0) Belt.Result.t) -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-alt", "title": "alt", "contents": "alt ", "rendered": "<h4 class='item'>let alt: 'a0 'e0.\n  ('a0, 'e0) Belt.Result.t -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-fold", "title": "fold", "contents": "fold ", "rendered": "<h4 class='item'>let fold: 'a0 'e0 'c0. ('a0 -&gt; 'c0) -&gt; ('e0 -&gt; 'c0) -&gt; ('a0, 'e0) Belt.Result.t -&gt; 'c0</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-flatMap", "title": "flatMap", "contents": "flatMap ", "rendered": "<h4 class='item'>let flatMap: 'a0 'b0 'e0.\n  ('a0 -&gt; ('b0, 'e0) Belt.Result.t) -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-bind", "title": "bind", "contents": "bind ", "rendered": "<h4 class='item'>let bind: 'a0 'b0 'e0.\n  ('a0, 'e0) Belt.Result.t -&gt;\n  ('a0 -&gt; ('b0, 'e0) Belt.Result.t) -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map5", "title": "map5", "contents": "map5 ", "rendered": "<h4 class='item'>let map5: 'a0 'b0 'c0 'd0 'e0 'f0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0 -&gt; 'd0 -&gt; 'e0 -&gt; 'f0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt;\n  ('c0, 'x) Belt.Result.t -&gt;\n  ('d0, 'x) Belt.Result.t -&gt;\n  ('e0, 'x) Belt.Result.t -&gt; ('f0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map4", "title": "map4", "contents": "map4 ", "rendered": "<h4 class='item'>let map4: 'a0 'b0 'c0 'd0 'e0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0 -&gt; 'd0 -&gt; 'e0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt;\n  ('c0, 'x) Belt.Result.t -&gt;\n  ('d0, 'x) Belt.Result.t -&gt; ('e0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map3", "title": "map3", "contents": "map3 ", "rendered": "<h4 class='item'>let map3: 'a0 'b0 'c0 'd0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0 -&gt; 'd0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt;\n  ('c0, 'x) Belt.Result.t -&gt; ('d0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map2", "title": "map2", "contents": "map2 ", "rendered": "<h4 class='item'>let map2: 'a0 'b0 'c0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt; ('c0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-apply", "title": "apply", "contents": "apply ", "rendered": "<h4 class='item'>let apply: 'a0 'b0 'e0.\n  ('a0 -&gt; 'b0, 'e0) Belt.Result.t -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-tap", "title": "tap", "contents": "tap ", "rendered": "<h4 class='item'>let tap: 'a0 'e0. ('a0 -&gt; unit) -&gt; ('a0, 'e0) Belt.Result.t -&gt; unit</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-bimap", "title": "bimap", "contents": "bimap ", "rendered": "<h4 class='item'>let bimap: 'a0 'b0 'e1 'e2.\n  ('a0 -&gt; 'b0) -&gt;\n  ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) Belt.Result.t -&gt; ('b0, 'e2) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-mapError", "title": "mapError", "contents": "mapError ", "rendered": "<h4 class='item'>let mapError: 'a0 'e1 'e2.\n  ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) Belt.Result.t -&gt; ('a0, 'e2) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map", "title": "map", "contents": "map ", "rendered": "<h4 class='item'>let map: 'a0 'b0 'e0.\n  ('a0 -&gt; 'b0) -&gt; ('a0, 'e0) Belt.Result.t -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-unit", "title": "unit", "contents": "unit ", "rendered": "<h4 class='item'>let unit: 'e0. (unit, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-error", "title": "error", "contents": "error ", "rendered": "<h4 class='item'>let error: 'a0 'e0. 'e0 -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-ok", "title": "ok", "contents": "ok ", "rendered": "<h4 class='item'>let ok: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-pure", "title": "pure", "contents": "pure ", "rendered": "<h4 class='item'>let pure: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#type-t", "title": "t", "contents": "t Belt Result t", "rendered": "<h4 class='item'>type t('a, 'e) = Belt.Result.t('a, 'e)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html", "title": "Relude_Result", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html", "title": "Relude_Result", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#Relude_Result", "title": "Relude_Result", "contents": "", "rendered": "", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Ordering.html#value-toInt", "title": "toInt", "contents": "toInt BsAbstract Interface ordering int ", "rendered": "<h4 class='item'>let toInt: BsAbstract.Interface.ordering => int</h4>", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html#value-fromInt", "title": "fromInt", "contents": "fromInt int BsAbstract Interface ordering ", "rendered": "<h4 class='item'>let fromInt: int => BsAbstract.Interface.ordering</h4>", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html", "title": "Relude_Ordering", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html", "title": "Relude_Ordering", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html#Relude_Ordering", "title": "Relude_Ordering", "contents": "", "rendered": "", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Option.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= option  option option  ", "rendered": "<h4 class='item'>let >>=: ('a => option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> option  option option  ", "rendered": "<h4 class='item'>let <*>: (option('a => 'a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  option option  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.<|>", "title": "Infix.<|>", "contents": "<|> option option option  ", "rendered": "<h4 class='item'>let <|>: (option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.|?", "title": "Infix.|?", "contents": "|? option unit   ", "rendered": "<h4 class='item'>let |?: (option('a), unit => 'a) => 'a</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map5", "title": "map5", "contents": "map5      option option option option option option      ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  option('a),\n  option('b),\n  option('c),\n  option('d),\n  option('e)\n) => option('f)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map4", "title": "map4", "contents": "map4     option option option option option     ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  option('a),\n  option('b),\n  option('c),\n  option('d)\n) => option('e)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map3", "title": "map3", "contents": "map3    option option option option    ", "rendered": "<h4 class='item'>let map3: (\n  ('a, 'b, 'c) => 'd,\n  option('a),\n  option('b),\n  option('c)\n) => option('d)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map2", "title": "map2", "contents": "map2   option option option   ", "rendered": "<h4 class='item'>let map2: (\n  ('a, 'b) => 'c,\n  option('a),\n  option('b)\n) => option('c)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Monoid_Any.empty", "title": "Monoid_Any.empty", "contents": "empty option", "rendered": "<h4 class='item'>let empty: option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Monoid_Any.append", "title": "Monoid_Any.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (<a href=\"./api/Relude_Option.html#type-Monoid_Any.t\">t</a>('a), <a href=\"./api/Relude_Option.html#type-Monoid_Any.t\">t</a>('a)) => <a href=\"./api/Relude_Option.html#type-Monoid_Any.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#type-Monoid_Any.t", "title": "Monoid_Any.t", "contents": "t Semigroup_Any t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Option.html#module-Semigroup_Any\">Semigroup_Any</a>.<a href=\"./api/Relude_Option.html#type-Semigroup_Any.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Monoid_Any", "title": "Monoid_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Monoid_Any", "title": "Monoid_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Monoid_Any", "title": "Monoid_Any", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Semigroup_Any.append", "title": "Semigroup_Any.append", "contents": "append option option option  ", "rendered": "<h4 class='item'>let append: (option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#type-Semigroup_Any.t", "title": "Semigroup_Any.t", "contents": "t option", "rendered": "<h4 class='item'>type t('a) = option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Semigroup_Any", "title": "Semigroup_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Semigroup_Any", "title": "Semigroup_Any", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-eq", "title": "eq", "contents": "eq option option bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'r),\n  option('a),\n  option('a)\n) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-eqF", "title": "eqF", "contents": "eqF bool   option option bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, option('a), option('a)) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-flatten", "title": "flatten", "contents": "flatten option option option ", "rendered": "<h4 class='item'>let flatten: option(option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-filter", "title": "filter", "contents": "filter bool  option option  ", "rendered": "<h4 class='item'>let filter: ('a => bool, option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-empty", "title": "empty", "contents": "empty option", "rendered": "<h4 class='item'>let empty: option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-alt", "title": "alt", "contents": "alt option option option  ", "rendered": "<h4 class='item'>let alt: (option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-foldRight", "title": "foldRight", "contents": "foldRight   option   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft   option   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-flatMap", "title": "flatMap", "contents": "flatMap option  option option  ", "rendered": "<h4 class='item'>let flatMap: ('a => option('b), option('a)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-bind", "title": "bind", "contents": "bind option option  option  ", "rendered": "<h4 class='item'>let bind: (option('a), 'a => option('b)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-pure", "title": "pure", "contents": "pure option ", "rendered": "<h4 class='item'>let pure: 'a => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-apply", "title": "apply", "contents": "apply option  option option  ", "rendered": "<h4 class='item'>let apply: (option('a => 'b), option('a)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map", "title": "map", "contents": "map  option option  ", "rendered": "<h4 class='item'>let map: ('a => 'b, option('a)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-isNone", "title": "isNone", "contents": "isNone option bool ", "rendered": "<h4 class='item'>let isNone: option('a) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-isSome", "title": "isSome", "contents": "isSome option bool ", "rendered": "<h4 class='item'>let isSome: option('a) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-toArray", "title": "toArray", "contents": "toArray option array ", "rendered": "<h4 class='item'>let toArray: option('a) => array('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-toList", "title": "toList", "contents": "toList option list ", "rendered": "<h4 class='item'>let toList: option('a) => list('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-getOrElseStrict", "title": "getOrElseStrict", "contents": "getOrElseStrict option  ", "rendered": "<h4 class='item'>let getOrElseStrict: ('a, option('a)) => 'a</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-getOrElse", "title": "getOrElse", "contents": "getOrElse unit  option  ", "rendered": "<h4 class='item'>let getOrElse: (unit => 'a, option('a)) => 'a</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-foldStrict", "title": "foldStrict", "contents": "foldStrict  option   ", "rendered": "<h4 class='item'>let foldStrict: ('b, 'a => 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-fold", "title": "fold", "contents": "fold unit   option   ", "rendered": "<h4 class='item'>let fold: (unit => 'b, 'a => 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html", "title": "Relude_Option", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html", "title": "Relude_Option", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#Relude_Option", "title": "Relude_Option", "contents": "", "rendered": "", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Eq.eq", "title": "NonEmptyF.Eq.eq", "contents": "eq t EqA t t EqA t bool  ", "rendered": "<h4 class='item'>let eq: (t(EqA.t), t(EqA.t)) => bool</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Eq.t", "title": "NonEmptyF.Eq.t", "contents": "t t EqA t", "rendered": "<h4 class='item'>type t = t(EqA.t)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Eq", "title": "NonEmptyF.Eq", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Eq", "title": "NonEmptyF.Eq", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.sequence", "title": "NonEmptyF.Traversable.sequence", "contents": "sequence t applicative_t applicative_t t ", "rendered": "<h4 class='item'>let sequence: t(applicative_t('a)) => applicative_t(t('a))</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.traverse", "title": "NonEmptyF.Traversable.traverse", "contents": "traverse applicative_t  t applicative_t t  ", "rendered": "<h4 class='item'>let traverse: (\n  'a => applicative_t('b),\n  t('a)\n) => applicative_t(t('b))</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.Fold_Map_Plus.fold_map", "title": "NonEmptyF.Traversable.Fold_Map_Plus.fold_map", "contents": "fold_map P t  t P t  ", "rendered": "<h4 class='item'>let fold_map: ('a => P.t('a), t('a)) => P.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable.Fold_Map_Plus", "title": "NonEmptyF.Traversable.Fold_Map_Plus", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable.Fold_Map_Plus", "title": "NonEmptyF.Traversable.Fold_Map_Plus", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.map", "title": "NonEmptyF.Traversable.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Traversable.applicative_t", "title": "NonEmptyF.Traversable.applicative_t", "contents": "applicative_t A t", "rendered": "<h4 class='item'>type applicative_t('a) = A.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Traversable.t", "title": "NonEmptyF.Traversable.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.Fold_Map_Any.fold_map", "title": "NonEmptyF.Foldable.Fold_Map_Any.fold_map", "contents": "fold_map FoldMapAny t  t FoldMapAny t  ", "rendered": "<h4 class='item'>let fold_map: (\n  'a => FoldMapAny.t('a),\n  t('a)\n) => FoldMapAny.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Any", "title": "NonEmptyF.Foldable.Fold_Map_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Any", "title": "NonEmptyF.Foldable.Fold_Map_Any", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.Fold_Map_Plus.fold_map", "title": "NonEmptyF.Foldable.Fold_Map_Plus.fold_map", "contents": "fold_map FoldMapPlus t  t FoldMapPlus t  ", "rendered": "<h4 class='item'>let fold_map: (\n  'a => FoldMapPlus.t('a),\n  t('a)\n) => FoldMapPlus.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Plus", "title": "NonEmptyF.Foldable.Fold_Map_Plus", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Plus", "title": "NonEmptyF.Foldable.Fold_Map_Plus", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.Fold_Map.fold_map", "title": "NonEmptyF.Foldable.Fold_Map.fold_map", "contents": "fold_map FoldMapMonoid t  t FoldMapMonoid t  ", "rendered": "<h4 class='item'>let fold_map: (\n  'a => FoldMapMonoid.t,\n  t('a)\n) => FoldMapMonoid.t</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map", "title": "NonEmptyF.Foldable.Fold_Map", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map", "title": "NonEmptyF.Foldable.Fold_Map", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.fold_right", "title": "NonEmptyF.Foldable.fold_right", "contents": "fold_right   t   ", "rendered": "<h4 class='item'>let fold_right: (('a, 'a) => 'a, 'a, t('a)) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.fold_left", "title": "NonEmptyF.Foldable.fold_left", "contents": "fold_left   t   ", "rendered": "<h4 class='item'>let fold_left: (('a, 'a) => 'a, 'a, t('a)) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Foldable.t", "title": "NonEmptyF.Foldable.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable", "title": "NonEmptyF.Foldable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable", "title": "NonEmptyF.Foldable", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.flat_map", "title": "NonEmptyF.Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.pure", "title": "NonEmptyF.Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.apply", "title": "NonEmptyF.Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.map", "title": "NonEmptyF.Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Monad.t", "title": "NonEmptyF.Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Monad", "title": "NonEmptyF.Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Monad", "title": "NonEmptyF.Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Monad", "title": "NonEmptyF.Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Applicative.pure", "title": "NonEmptyF.Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Applicative.apply", "title": "NonEmptyF.Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Applicative.map", "title": "NonEmptyF.Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Applicative.t", "title": "NonEmptyF.Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Applicative", "title": "NonEmptyF.Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Applicative", "title": "NonEmptyF.Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Applicative", "title": "NonEmptyF.Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Apply.apply", "title": "NonEmptyF.Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Apply.map", "title": "NonEmptyF.Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Apply.t", "title": "NonEmptyF.Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Apply", "title": "NonEmptyF.Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Apply", "title": "NonEmptyF.Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Apply", "title": "NonEmptyF.Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Functor.map", "title": "NonEmptyF.Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Functor.t", "title": "NonEmptyF.Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Functor", "title": "NonEmptyF.Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Functor", "title": "NonEmptyF.Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.MagmaAny.append", "title": "NonEmptyF.MagmaAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (t('a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.MagmaAny.t", "title": "NonEmptyF.MagmaAny.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.MagmaAny", "title": "NonEmptyF.MagmaAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.MagmaAny", "title": "NonEmptyF.MagmaAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.SemigroupAny.append", "title": "NonEmptyF.SemigroupAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (t('a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.SemigroupAny.t", "title": "NonEmptyF.SemigroupAny.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.SemigroupAny", "title": "NonEmptyF.SemigroupAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.SemigroupAny", "title": "NonEmptyF.SemigroupAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.show", "title": "NonEmptyF.show", "contents": "show t string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'q),\n  t('a)\n) => string</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.showF", "title": "NonEmptyF.showF", "contents": "showF string  t string  ", "rendered": "<h4 class='item'>let showF: ('a => string, t('a)) => string</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.eq", "title": "NonEmptyF.eq", "contents": "eq t t bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'p),\n  t('a),\n  t('a)\n) => bool</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.eqF", "title": "NonEmptyF.eqF", "contents": "eqF bool   t t bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, t('a), t('a)) => bool</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.mkString", "title": "NonEmptyF.mkString", "contents": "mkString string t string string  ", "rendered": "<h4 class='item'>let mkString: (string, t(string)) => string</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.flatMap", "title": "NonEmptyF.flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => t('b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.bind", "title": "NonEmptyF.bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.apply", "title": "NonEmptyF.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.map", "title": "NonEmptyF.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.join", "title": "NonEmptyF.join", "contents": "join t t t ", "rendered": "<h4 class='item'>let join: t(t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.flatten", "title": "NonEmptyF.flatten", "contents": "flatten t t t ", "rendered": "<h4 class='item'>let flatten: t(t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.foldRight", "title": "NonEmptyF.foldRight", "contents": "foldRight   t   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, t('a)) => 'b</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.foldLeft", "title": "NonEmptyF.foldLeft", "contents": "foldLeft   t   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, t('a)) => 'b</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.reduceLeft", "title": "NonEmptyF.reduceLeft", "contents": "reduceLeft   t  ", "rendered": "<h4 class='item'>let reduceLeft: (('a, 'a) => 'a, t('a)) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.concat", "title": "NonEmptyF.concat", "contents": "concat t t t  ", "rendered": "<h4 class='item'>let concat: (t('a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.tail", "title": "NonEmptyF.tail", "contents": "tail t TailSequence t ", "rendered": "<h4 class='item'>let tail: t('a) => TailSequence.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.head", "title": "NonEmptyF.head", "contents": "head t ", "rendered": "<h4 class='item'>let head: t('a) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.cons", "title": "NonEmptyF.cons", "contents": "cons t t  ", "rendered": "<h4 class='item'>let cons: ('a, t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.toSequence", "title": "NonEmptyF.toSequence", "contents": "toSequence t TailSequence t ", "rendered": "<h4 class='item'>let toSequence: t('a) => TailSequence.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.fromSequence", "title": "NonEmptyF.fromSequence", "contents": "fromSequence TailSequence t option t ", "rendered": "<h4 class='item'>let fromSequence: TailSequence.t('a) => option(t('a))</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.make", "title": "NonEmptyF.make", "contents": "make TailSequence t t  ", "rendered": "<h4 class='item'>let make: ('a, TailSequence.t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.pure", "title": "NonEmptyF.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.length", "title": "NonEmptyF.length", "contents": "length t int ", "rendered": "<h4 class='item'>let length: t('a) => int</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.t", "title": "NonEmptyF.t", "contents": "t TailSequence t", "rendered": "<h4 class='item'>type t('a) = | NonEmpty('a, TailSequence.t('a))\n</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF", "title": "NonEmptyF", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF", "title": "NonEmptyF", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html", "title": "Relude_NonEmpty", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html", "title": "Relude_NonEmpty", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#Relude_NonEmpty", "title": "Relude_NonEmpty", "contents": "", "rendered": "", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_MonadError.html", "title": "Relude_MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadError"},
{"href": "./api/Relude_MonadError.html", "title": "Relude_MonadError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadError"},
{"href": "./api/Relude_MonadError.html#Relude_MonadError", "title": "Relude_MonadError", "contents": "", "rendered": "", "breadcrumb": "Relude_MonadError"},
{"href": "./api/Relude_MonadEff.html#value-MonadEffEff.liftEff", "title": "MonadEffEff.liftEff", "contents": "liftEff ", "rendered": "<h4 class='item'>let liftEff: 'a => 'a</h4>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#type-MonadEffEff.t", "title": "MonadEffEff.t", "contents": "t Eff t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_MonadEff.html#module-Eff\">Eff</a>.<a href=\"./api/Relude_MonadEff.html#type-Eff.t\">t</a>('a)</h4>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#module-MonadEffEff", "title": "MonadEffEff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#module-MonadEffEff", "title": "MonadEffEff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html", "title": "Relude_MonadEff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html", "title": "Relude_MonadEff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#Relude_MonadEff", "title": "Relude_MonadEff", "contents": "", "rendered": "", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadAff.html#value-MonadAffAff.liftAff", "title": "MonadAffAff.liftAff", "contents": "liftAff ", "rendered": "<h4 class='item'>let liftAff: 'a => 'a</h4>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#type-MonadAffAff.t", "title": "MonadAffAff.t", "contents": "t Aff t", "rendered": "<h4 class='item'>type t('a, 'e) = <a href=\"./api/Relude_MonadAff.html#module-Aff\">Aff</a>.<a href=\"./api/Relude_MonadAff.html#type-Aff.t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#module-MonadAffAff", "title": "MonadAffAff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#module-MonadAffAff", "title": "MonadAffAff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html", "title": "Relude_MonadAff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html", "title": "Relude_MonadAff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#Relude_MonadAff", "title": "Relude_MonadAff", "contents": "", "rendered": "", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_ListF.html#value-Validation.traverse", "title": "Validation.traverse", "contents": "traverse Belt Result t  list Relude_Validation t list List t  ", "rendered": "<h4 class='item'>let traverse: (\n  'a => Belt.Result.t('a, 'a),\n  list('a)\n) => <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>(list('a), <a href=\"./api/Relude_NonEmpty.html#module-List\" title=\"Relude_NonEmpty.List\">List</a>.<a href=\"./api/Relude_NonEmpty.html#type-List.t\">t</a>('a))</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Validation", "title": "Validation", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Validation", "title": "Validation", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#value-Result.traverse", "title": "Result.traverse", "contents": "traverse Belt Result t  list Belt Result t list  ", "rendered": "<h4 class='item'>let traverse: (\n  'a => Belt.Result.t('a, 'a),\n  list('a)\n) => Belt.Result.t(list('a), 'a)</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Result", "title": "Result", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Result", "title": "Result", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#value-Option.sequence", "title": "Option.sequence", "contents": "sequence list option option list ", "rendered": "<h4 class='item'>let sequence: list(option('a)) => option(list('a))</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#value-Option.traverse", "title": "Option.traverse", "contents": "traverse option  list option list  ", "rendered": "<h4 class='item'>let traverse: ('a => option('a), list('a)) => option(\n  list('a)\n)</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Option", "title": "Option", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Option", "title": "Option", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html", "title": "Relude_ListF", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html", "title": "Relude_ListF", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#Relude_ListF", "title": "Relude_ListF", "contents": "", "rendered": "", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_List.html#value-IsoArray.toArray", "title": "IsoArray.toArray", "contents": "toArray list array ", "rendered": "<h4 class='item'>let toArray: list('a) => array('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-IsoArray.fromArray", "title": "IsoArray.fromArray", "contents": "fromArray array list ", "rendered": "<h4 class='item'>let fromArray: array('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-IsoArray.t", "title": "IsoArray.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-IsoArray", "title": "IsoArray", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-IsoArray", "title": "IsoArray", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.showF", "title": "Sequence.showF", "contents": "showF string  list string  ", "rendered": "<h4 class='item'>let showF: ('a => string, list('a)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.eqF", "title": "Sequence.eqF", "contents": "eqF bool   list list bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, list('a), list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.mkString", "title": "Sequence.mkString", "contents": "mkString string list string string  ", "rendered": "<h4 class='item'>let mkString: (string, list(string)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.tailOrEmpty", "title": "Sequence.tailOrEmpty", "contents": "tailOrEmpty list list ", "rendered": "<h4 class='item'>let tailOrEmpty: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.tail", "title": "Sequence.tail", "contents": "tail list option list ", "rendered": "<h4 class='item'>let tail: list('a) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.head", "title": "Sequence.head", "contents": "head list option ", "rendered": "<h4 class='item'>let head: list('a) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.isNotEmpty", "title": "Sequence.isNotEmpty", "contents": "isNotEmpty list bool ", "rendered": "<h4 class='item'>let isNotEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.isEmpty", "title": "Sequence.isEmpty", "contents": "isEmpty list bool ", "rendered": "<h4 class='item'>let isEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.length", "title": "Sequence.length", "contents": "length list int ", "rendered": "<h4 class='item'>let length: list('a) => int</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-Sequence.t", "title": "Sequence.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Sequence", "title": "Sequence", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Sequence", "title": "Sequence", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.*>", "title": "Infix.*>", "contents": "*> Apply t Apply t Apply t  ", "rendered": "<h4 class='item'>let *>: (<a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a), <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<*", "title": "Infix.<*", "contents": "<* Apply t Apply t Apply t  ", "rendered": "<h4 class='item'>let <*: (<a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a), <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> BsAbstract List Alternative t  BsAbstract List Alternative t BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <*>: (\n  BsAbstract.List.Alternative.t('a => 'a),\n  BsAbstract.List.Alternative.t(\n    'a\n  )\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> BsAbstract List Alternative t  BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <#>: (\n  BsAbstract.List.Alternative.t('a),\n  'a => 'a\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  BsAbstract List Alternative t BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <$>: (\n  'a => 'a,\n  BsAbstract.List.Alternative.t(\n    'a\n  )\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<|>", "title": "Infix.<|>", "contents": "<|> BsAbstract List Alternative t BsAbstract List Alternative t BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <|>: (\n  BsAbstract.List.Alternative.t('a),\n  BsAbstract.List.Alternative.t(\n    'a\n  )\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<=<", "title": "Infix.<=<", "contents": "<=< BsAbstract List Monad t  BsAbstract List Monad t  BsAbstract List Monad t   ", "rendered": "<h4 class='item'>let <=<: (\n  'a => BsAbstract.List.Monad.t('a),\n  'a => BsAbstract.List.Monad.t('a),\n  'a\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.>=>", "title": "Infix.>=>", "contents": ">=> BsAbstract List Monad t  BsAbstract List Monad t  BsAbstract List Monad t   ", "rendered": "<h4 class='item'>let >=>: (\n  'a => BsAbstract.List.Monad.t('a),\n  'a => BsAbstract.List.Monad.t('a),\n  'a\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.=<<", "title": "Infix.=<<", "contents": "=<< BsAbstract List Monad t  BsAbstract List Monad t BsAbstract List Monad t  ", "rendered": "<h4 class='item'>let =<<: (\n  'a => BsAbstract.List.Monad.t('a),\n  BsAbstract.List.Monad.t('a)\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= BsAbstract List Monad t BsAbstract List Monad t  BsAbstract List Monad t  ", "rendered": "<h4 class='item'>let >>=: (\n  BsAbstract.List.Monad.t('a),\n  'a => BsAbstract.List.Monad.t(\n    'a\n  )\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map5", "title": "map5", "contents": "map5      list list list list list list      ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  list('a),\n  list('b),\n  list('c),\n  list('d),\n  list('e)\n) => list('f)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map4", "title": "map4", "contents": "map4     list list list list list     ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  list('a),\n  list('b),\n  list('c),\n  list('d)\n) => list('e)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map3", "title": "map3", "contents": "map3    list list list list    ", "rendered": "<h4 class='item'>let map3: (\n  ('a, 'b, 'c) => 'd,\n  list('a),\n  list('b),\n  list('c)\n) => list('d)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map2", "title": "map2", "contents": "map2   list list list   ", "rendered": "<h4 class='item'>let map2: (('a, 'b) => 'c, list('a), list('b)) => list('c)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-flap", "title": "flap", "contents": "flap list  list  ", "rendered": "<h4 class='item'>let flap: (list('a => 'b), 'a) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-void", "title": "void", "contents": "void list list unit ", "rendered": "<h4 class='item'>let void: list('a) => list(unit)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-MonoidAny.empty", "title": "MonoidAny.empty", "contents": "empty list", "rendered": "<h4 class='item'>let empty: list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-MonoidAny.append", "title": "MonoidAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (<a href=\"./api/Relude_List.html#type-MonoidAny.t\">t</a>('a), <a href=\"./api/Relude_List.html#type-MonoidAny.t\">t</a>('a)) => <a href=\"./api/Relude_List.html#type-MonoidAny.t\">t</a>('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-MonoidAny.t", "title": "MonoidAny.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-MonoidAny", "title": "MonoidAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-SemigroupAny.append", "title": "SemigroupAny.append", "contents": "append list list list  ", "rendered": "<h4 class='item'>let append: (list('a), list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-SemigroupAny.t", "title": "SemigroupAny.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-show", "title": "show", "contents": "show list string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'o),\n  list('a)\n) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-showF", "title": "showF", "contents": "showF string  list string  ", "rendered": "<h4 class='item'>let showF: ('a => string, list('a)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-eq", "title": "eq", "contents": "eq list list bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'n),\n  list('a),\n  list('a)\n) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-eqF", "title": "eqF", "contents": "eqF bool   list list bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, list('a), list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-mkString", "title": "mkString", "contents": "mkString string list string string  ", "rendered": "<h4 class='item'>let mkString: (string, list(string)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-toArray", "title": "toArray", "contents": "toArray list array ", "rendered": "<h4 class='item'>let toArray: list('a) => array('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-fromArray", "title": "fromArray", "contents": "fromArray array list ", "rendered": "<h4 class='item'>let fromArray: array('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-flatten", "title": "flatten", "contents": "flatten list list list ", "rendered": "<h4 class='item'>let flatten: list(list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-flatMap", "title": "flatMap", "contents": "flatMap list  list list  ", "rendered": "<h4 class='item'>let flatMap: ('a => list('b), list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-bind", "title": "bind", "contents": "bind list list  list  ", "rendered": "<h4 class='item'>let bind: (list('a), 'a => list('b)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-apply", "title": "apply", "contents": "apply list  list list  ", "rendered": "<h4 class='item'>let apply: (list('a => 'b), list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-forEachWithIndex", "title": "forEachWithIndex", "contents": "forEachWithIndex int int unit   list int unit  ", "rendered": "<h4 class='item'>let forEachWithIndex: (\n  (int, int) => unit,\n  list(int)\n) => unit</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-forEach", "title": "forEach", "contents": "forEach unit  list unit  ", "rendered": "<h4 class='item'>let forEach: ('a => unit, list('a)) => unit</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-mapWithIndex", "title": "mapWithIndex", "contents": "mapWithIndex int int   list int list  ", "rendered": "<h4 class='item'>let mapWithIndex: ((int, int) => 'b, list(int)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map", "title": "map", "contents": "map  list list  ", "rendered": "<h4 class='item'>let map: ('a => 'b, list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-distinct", "title": "distinct", "contents": "distinct bool   list list  ", "rendered": "<h4 class='item'>let distinct: (('a, 'a) => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-all", "title": "all", "contents": "all bool  list bool  ", "rendered": "<h4 class='item'>let all: ('a => bool, list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-indexOf", "title": "indexOf", "contents": "indexOf bool   list option int   ", "rendered": "<h4 class='item'>let indexOf: (('a, 'a) => bool, 'a, list('a)) => option(int)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-contains", "title": "contains", "contents": "contains bool   list bool   ", "rendered": "<h4 class='item'>let contains: (('a, 'a) => bool, 'a, list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-any", "title": "any", "contents": "any bool  list bool  ", "rendered": "<h4 class='item'>let any: ('a => bool, list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-reverse", "title": "reverse", "contents": "reverse list list ", "rendered": "<h4 class='item'>let reverse: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-shuffle", "title": "shuffle", "contents": "shuffle list list ", "rendered": "<h4 class='item'>let shuffle: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-sort", "title": "sort", "contents": "sort BsAbstract Interface ordering   list list  ", "rendered": "<h4 class='item'>let sort: (\n  ('a, 'a) => BsAbstract.Interface.ordering,\n  list('a)\n) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-sortWithInt", "title": "sortWithInt", "contents": "sortWithInt int   list list  ", "rendered": "<h4 class='item'>let sortWithInt: (('a, 'a) => int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-unzip", "title": "unzip", "contents": "unzip list list list ", "rendered": "<h4 class='item'>let unzip: list(('a, 'b)) => (list('a), list('b))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-zipWithIndex", "title": "zipWithIndex", "contents": "zipWithIndex list list int ", "rendered": "<h4 class='item'>let zipWithIndex: list('a) => list(('a, int))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-zipWith", "title": "zipWith", "contents": "zipWith   list list list   ", "rendered": "<h4 class='item'>let zipWith: (('a, 'b) => 'c, list('a), list('b)) => list(\n  'c\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-zip", "title": "zip", "contents": "zip list list list  ", "rendered": "<h4 class='item'>let zip: (list('a), list('b)) => list(('a, 'b))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-replicate", "title": "replicate", "contents": "replicate int list list  ", "rendered": "<h4 class='item'>let replicate: (int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-intersperse", "title": "intersperse", "contents": "intersperse list list  ", "rendered": "<h4 class='item'>let intersperse: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-prependToAll", "title": "prependToAll", "contents": "prependToAll list list  ", "rendered": "<h4 class='item'>let prependToAll: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-splitAt", "title": "splitAt", "contents": "splitAt int list option list list  ", "rendered": "<h4 class='item'>let splitAt: (int, list('a)) => option((list('a), list('a)))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-partition", "title": "partition", "contents": "partition bool  list list list  ", "rendered": "<h4 class='item'>let partition: ('a => bool, list('a)) => (\n  list('a),\n  list('a)\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-findWithIndex", "title": "findWithIndex", "contents": "findWithIndex int bool   list option  ", "rendered": "<h4 class='item'>let findWithIndex: (('a, int) => bool, list('a)) => option(\n  'a\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-find", "title": "find", "contents": "find bool  list option  ", "rendered": "<h4 class='item'>let find: ('a => bool, list('a)) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-filterWithIndex", "title": "filterWithIndex", "contents": "filterWithIndex int bool   list list  ", "rendered": "<h4 class='item'>let filterWithIndex: (('a, int) => bool, list('a)) => list(\n  'a\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-filter", "title": "filter", "contents": "filter bool  list list  ", "rendered": "<h4 class='item'>let filter: ('a => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-dropWhile", "title": "dropWhile", "contents": "dropWhile bool  list list  ", "rendered": "<h4 class='item'>let dropWhile: ('a => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-dropUpTo", "title": "dropUpTo", "contents": "dropUpTo int list list  ", "rendered": "<h4 class='item'>let dropUpTo: (int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-drop", "title": "drop", "contents": "drop int list option list  ", "rendered": "<h4 class='item'>let drop: (int, list('a)) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-takeWhile", "title": "takeWhile", "contents": "takeWhile bool  list list  ", "rendered": "<h4 class='item'>let takeWhile: ('a => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-takeUpTo", "title": "takeUpTo", "contents": "takeUpTo int list list  ", "rendered": "<h4 class='item'>let takeUpTo: (int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-take", "title": "take", "contents": "take int list option list  ", "rendered": "<h4 class='item'>let take: (int, list('a)) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-last", "title": "last", "contents": "last list option ", "rendered": "<h4 class='item'>let last: list('a) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-init", "title": "init", "contents": "init list option list ", "rendered": "<h4 class='item'>let init: list('a) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-tailOrEmpty", "title": "tailOrEmpty", "contents": "tailOrEmpty list list ", "rendered": "<h4 class='item'>let tailOrEmpty: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-tail", "title": "tail", "contents": "tail list option list ", "rendered": "<h4 class='item'>let tail: list('a) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-head", "title": "head", "contents": "head list option ", "rendered": "<h4 class='item'>let head: list('a) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-get", "title": "get", "contents": "get int list option  ", "rendered": "<h4 class='item'>let get: (int, list('a)) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-scanRight", "title": "scanRight", "contents": "scanRight   list list   ", "rendered": "<h4 class='item'>let scanRight: (('a, 'b) => 'b, 'b, list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-scanLeft", "title": "scanLeft", "contents": "scanLeft   list list   ", "rendered": "<h4 class='item'>let scanLeft: (('b, 'a) => 'b, 'b, list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-foldRight", "title": "foldRight", "contents": "foldRight   list   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, list('a)) => 'b</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft   list   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, list('a)) => 'b</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-append", "title": "append", "contents": "append list list  ", "rendered": "<h4 class='item'>let append: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-prepend", "title": "prepend", "contents": "prepend list list  ", "rendered": "<h4 class='item'>let prepend: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-uncons", "title": "uncons", "contents": "uncons list option list ", "rendered": "<h4 class='item'>let uncons: list('a) => option(('a, list('a)))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-cons", "title": "cons", "contents": "cons list list  ", "rendered": "<h4 class='item'>let cons: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-concat", "title": "concat", "contents": "concat list list list  ", "rendered": "<h4 class='item'>let concat: (list('a), list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-makeWithIndex", "title": "makeWithIndex", "contents": "makeWithIndex int int  list  ", "rendered": "<h4 class='item'>let makeWithIndex: (int, int => 'a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-repeat", "title": "repeat", "contents": "repeat int list  ", "rendered": "<h4 class='item'>let repeat: (int, 'a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-one", "title": "one", "contents": "one list ", "rendered": "<h4 class='item'>let one: 'a => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-pure", "title": "pure", "contents": "pure list ", "rendered": "<h4 class='item'>let pure: 'a => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-empty", "title": "empty", "contents": "empty list", "rendered": "<h4 class='item'>let empty: list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-isNotEmpty", "title": "isNotEmpty", "contents": "isNotEmpty list bool ", "rendered": "<h4 class='item'>let isNotEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-isEmpty", "title": "isEmpty", "contents": "isEmpty list bool ", "rendered": "<h4 class='item'>let isEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-length", "title": "length", "contents": "length list int ", "rendered": "<h4 class='item'>let length: list('a) => int</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html", "title": "Relude_List", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html", "title": "Relude_List", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#Relude_List", "title": "Relude_List", "contents": "", "rendered": "", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_JsPromise.html#value-fromAff", "title": "fromAff", "contents": "fromAff Relude_Aff t exn Js Promise t ", "rendered": "<h4 class='item'>let fromAff: <a href=\"./api/Relude_Aff.html\">Relude_Aff</a>.<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, exn) => Js.Promise.t('a)</h4>", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html#value-toAff", "title": "toAff", "contents": "toAff Js Promise t Relude_Aff t Js Promise error ", "rendered": "<h4 class='item'>let toAff: Js.Promise.t('a) => <a href=\"./api/Relude_Aff.html\">Relude_Aff</a>.<a href=\"./api/Relude_Aff.html#type-t\">t</a>(\n  'a,\n  Js.Promise.error\n)</h4>", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html", "title": "Relude_JsPromise", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html", "title": "Relude_JsPromise", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html#Relude_JsPromise", "title": "Relude_JsPromise", "contents": "", "rendered": "", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsExn.html#value-fromExn", "title": "fromExn", "contents": "fromExn exn Js Exn t ", "rendered": "<h4 class='item'>let fromExn: exn => Js.Exn.t</h4>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html#value-throw", "title": "throw", "contents": "throw string unit ", "rendered": "<h4 class='item'>let throw: string => unit</h4>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html#value-make", "title": "make", "contents": "make string Js Exn t ", "rendered": "<h4 class='item'>let make: string => Js.Exn.t</h4>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html", "title": "Relude_JsExn", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html", "title": "Relude_JsExn", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html#Relude_JsExn", "title": "Relude_JsExn", "contents": "", "rendered": "", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsConsole.html#value-IO.warn", "title": "IO.warn", "contents": "warn string IO t unit ", "rendered": "<h4 class='item'>let warn: string => <a href=\"./api/Relude_JsConsole.html#module-IO.IO\">IO</a>.<a href=\"./api/Relude_JsConsole.html#type-IO.IO.t\">t</a>(unit, 'e)</h4>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#value-IO.log", "title": "IO.log", "contents": "log string IO t unit ", "rendered": "<h4 class='item'>let log: string => <a href=\"./api/Relude_JsConsole.html#module-IO.IO\">IO</a>.<a href=\"./api/Relude_JsConsole.html#type-IO.IO.t\">t</a>(unit, 'e)</h4>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#module-IO", "title": "IO", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#module-IO", "title": "IO", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html", "title": "Relude_JsConsole", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html", "title": "Relude_JsConsole", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#Relude_JsConsole", "title": "Relude_JsConsole", "contents": "", "rendered": "", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_Js.html", "title": "Relude_Js", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Js"},
{"href": "./api/Relude_Js.html", "title": "Relude_Js", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Js"},
{"href": "./api/Relude_Js.html#Relude_Js", "title": "Relude_Js", "contents": "", "rendered": "", "breadcrumb": "Relude_Js"},
{"href": "./api/Relude_IsoList.html", "title": "Relude_IsoList", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IsoList"},
{"href": "./api/Relude_IsoList.html", "title": "Relude_IsoList", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IsoList"},
{"href": "./api/Relude_IsoList.html#Relude_IsoList", "title": "Relude_IsoList", "contents": "", "rendered": "", "breadcrumb": "Relude_IsoList"},
{"href": "./api/Relude_IsoArray.html", "title": "Relude_IsoArray", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IsoArray"},
{"href": "./api/Relude_IsoArray.html", "title": "Relude_IsoArray", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IsoArray"},
{"href": "./api/Relude_IsoArray.html#Relude_IsoArray", "title": "Relude_IsoArray", "contents": "", "rendered": "", "breadcrumb": "Relude_IsoArray"},
{"href": "./api/Relude_Int.html#value-compareAsInt", "title": "compareAsInt", "contents": "compareAsInt int int int  ", "rendered": "<h4 class='item'>let compareAsInt: (int, int) => int</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-compare", "title": "compare", "contents": "compare int int ordering  ", "rendered": "<h4 class='item'>let compare: (int, int) => <a href=\"./api/Relude_Int.html#type-ordering\">ordering</a></h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-eq", "title": "eq", "contents": "eq int int bool  ", "rendered": "<h4 class='item'>let eq: (int, int) => bool</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-rangeAsArray", "title": "rangeAsArray", "contents": "rangeAsArray int int array int  ", "rendered": "<h4 class='item'>let rangeAsArray: (int, int) => array(int)</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-rangeAsList", "title": "rangeAsList", "contents": "rangeAsList int int list int  ", "rendered": "<h4 class='item'>let rangeAsList: (int, int) => list(int)</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#type-ordering", "title": "ordering", "contents": "ordering BsAbstract Interface ordering", "rendered": "<h4 class='item'>type ordering = BsAbstract.Interface.ordering</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html", "title": "Relude_Int", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html", "title": "Relude_Int", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#Relude_Int", "title": "Relude_Int", "contents": "", "rendered": "", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Identity.html#value-Show.show", "title": "Show.show", "contents": "show t string ", "rendered": "<h4 class='item'>let show: t => string</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Show.t", "title": "Show.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t = <a href=\"./api/Relude_Identity.html#type-t\">t</a>(E.t)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Show", "title": "Show", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Show", "title": "Show", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Eq.eq", "title": "Eq.eq", "contents": "eq t t bool  ", "rendered": "<h4 class='item'>let eq: (t, t) => bool</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Eq.t", "title": "Eq.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t = <a href=\"./api/Relude_Identity.html#type-t\">t</a>(E.t)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Eq", "title": "Eq", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Eq", "title": "Eq", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a => 'b), <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Monad.t", "title": "Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('a => 'b), <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a => 'a), <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Apply.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Apply.t", "title": "Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Functor.t", "title": "Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-showF", "title": "showF", "contents": "showF t string  t t string  ", "rendered": "<h4 class='item'>let showF: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a) => string, <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))) => string</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-show", "title": "show", "contents": "show t string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'm),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)\n) => string</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-eqF", "title": "eqF", "contents": "eqF t t t t bool   t t t t t t bool   ", "rendered": "<h4 class='item'>let eqF: (\n  (<a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)), <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))) => bool,\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)))\n) => bool</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-eq", "title": "eq", "contents": "eq t t bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'l),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)\n) => bool</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-flatMap", "title": "flatMap", "contents": "flatMap t t t  t t t t  ", "rendered": "<h4 class='item'>let flatMap: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)), <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a => 'b), <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-unwrap", "title": "unwrap", "contents": "unwrap t ", "rendered": "<h4 class='item'>let unwrap: <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a) => 'a</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a) = 'a</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html", "title": "Relude_Identity", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html", "title": "Relude_Identity", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#Relude_Identity", "title": "Relude_Identity", "contents": "", "rendered": "", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_IO.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.catchError", "title": "MonadError.catchError", "contents": "catchError t  t t  ", "rendered": "<h4 class='item'>let catchError: ('a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a), <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.throwError", "title": "MonadError.throwError", "contents": "throwError t ", "rendered": "<h4 class='item'>let throwError: 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.flat_map", "title": "MonadError.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.pure", "title": "MonadError.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.apply", "title": "MonadError.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.map", "title": "MonadError.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-MonadError.t", "title": "MonadError.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadError", "title": "MonadError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.throwError", "title": "MonadThrow.throwError", "contents": "throwError t ", "rendered": "<h4 class='item'>let throwError: 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.flat_map", "title": "MonadThrow.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.pure", "title": "MonadThrow.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.apply", "title": "MonadThrow.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.map", "title": "MonadThrow.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-MonadThrow.t", "title": "MonadThrow.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadThrow", "title": "MonadThrow", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Monad.t", "title": "Monad.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_IO.html#type-t\">t</a>('a => 'a, 'a), <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Apply.t", "title": "Apply.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Bifunctor.bimap", "title": "Bifunctor.bimap", "contents": "bimap   t t   ", "rendered": "<h4 class='item'>let bimap: ('a => 'a, 'a => 'a, <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Bifunctor.t", "title": "Bifunctor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a, 'e) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Bifunctor", "title": "Bifunctor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Bifunctor", "title": "Bifunctor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Functor.t", "title": "Functor.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-withDelay", "title": "withDelay", "contents": "withDelay ", "rendered": "<h4 class='item'>let withDelay: 'a0 'e0. int -&gt; ('a0, 'e0) t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-delayWithVoid", "title": "delayWithVoid", "contents": "delayWithVoid int t unit Void t ", "rendered": "<h4 class='item'>let delayWithVoid: int => <a href=\"./api/Relude_IO.html#type-t\">t</a>(unit, <a href=\"./api/Relude_IO.html#module-Void\">Void</a>.<a href=\"./api/Relude_IO.html#type-Void.t\">t</a>)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-delay", "title": "delay", "contents": "delay ", "rendered": "<h4 class='item'>let delay: 'e0. int -&gt; (unit, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unsafeRunAsync", "title": "unsafeRunAsync", "contents": "unsafeRunAsync ", "rendered": "<h4 class='item'>let unsafeRunAsync: 'a0 'e0. (('a0, 'e0) Result.t -&gt; unit) -&gt; ('a0, 'e0) t -&gt; unit</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unsummonError", "title": "unsummonError", "contents": "unsummonError ", "rendered": "<h4 class='item'>let unsummonError: 'a0 'e0. (('a0, 'e0) Result.t, Void.t) t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-summonError", "title": "summonError", "contents": "summonError ", "rendered": "<h4 class='item'>let summonError: 'a0 'e0. ('a0, 'e0) t -&gt; (('a0, 'e0) Result.t, Void.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-triesJS", "title": "triesJS", "contents": "triesJS ", "rendered": "<h4 class='item'>let triesJS: 'a0. (unit -&gt; 'a0) -&gt; ('a0, Js.Exn.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-tries", "title": "tries", "contents": "tries ", "rendered": "<h4 class='item'>let tries: 'a0. (unit -&gt; 'a0) -&gt; ('a0, exn) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-catchError", "title": "catchError", "contents": "catchError ", "rendered": "<h4 class='item'>let catchError: 'a0 'e0. ('e0 -&gt; ('a0, 'e0) t) -&gt; ('a0, 'e0) t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-bitap", "title": "bitap", "contents": "bitap ", "rendered": "<h4 class='item'>let bitap: 'a0 'e0. ('a0 -&gt; unit) -&gt; ('e0 -&gt; unit) -&gt; ('a0, 'e0) t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-bimap", "title": "bimap", "contents": "bimap ", "rendered": "<h4 class='item'>let bimap: 'a0 'b0 'e1 'e2. ('a0 -&gt; 'b0) -&gt; ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) t -&gt; ('b0, 'e2) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-tapError", "title": "tapError", "contents": "tapError ", "rendered": "<h4 class='item'>let tapError: 'a0 'e0. ('e0 -&gt; unit) -&gt; ('a0, 'e0) t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-mapError", "title": "mapError", "contents": "mapError ", "rendered": "<h4 class='item'>let mapError: 'a0 'e1 'e2. ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) t -&gt; ('a0, 'e2) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-apply", "title": "apply", "contents": "apply ", "rendered": "<h4 class='item'>let apply: 'a0 'b0 'e0. ('a0 -&gt; 'b0, 'e0) t -&gt; ('a0, 'e0) t -&gt; ('b0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-bind", "title": "bind", "contents": "bind ", "rendered": "<h4 class='item'>let bind: 'a0 'b0 'e0. ('a0, 'e0) t -&gt; ('a0 -&gt; ('b0, 'e0) t) -&gt; ('b0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-flatMap", "title": "flatMap", "contents": "flatMap ", "rendered": "<h4 class='item'>let flatMap: 'a0 'b0 'e0. ('a0 -&gt; ('b0, 'e0) t) -&gt; ('a0, 'e0) t -&gt; ('b0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-tap", "title": "tap", "contents": "tap ", "rendered": "<h4 class='item'>let tap: 'a0 'e0. ('a0 -&gt; unit) -&gt; ('a0, 'e0) t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-map", "title": "map", "contents": "map ", "rendered": "<h4 class='item'>let map: 'a0 'b0 'e0. ('a0 -&gt; 'b0) -&gt; ('a0, 'e0) t -&gt; ('b0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-fromResult", "title": "fromResult", "contents": "fromResult ", "rendered": "<h4 class='item'>let fromResult: 'a0 'e0. ('a0, 'e0) Result.t -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-fromOption", "title": "fromOption", "contents": "fromOption ", "rendered": "<h4 class='item'>let fromOption: 'a0 'e0. (unit -&gt; 'e0) -&gt; 'a0 option -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-async", "title": "async", "contents": "async ", "rendered": "<h4 class='item'>let async: 'a0 'e0. ((('a0, 'e0) Result.t -&gt; unit) -&gt; unit) -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspendIO", "title": "suspendIO", "contents": "suspendIO ", "rendered": "<h4 class='item'>let suspendIO: 'a0 'e0. (unit -&gt; ('a0, 'e0) t) -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspendThrow", "title": "suspendThrow", "contents": "suspendThrow ", "rendered": "<h4 class='item'>let suspendThrow: 'a0 'e0. (unit -&gt; 'e0) -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspendWithVoid", "title": "suspendWithVoid", "contents": "suspendWithVoid ", "rendered": "<h4 class='item'>let suspendWithVoid: 'a0. (unit -&gt; 'a0) -&gt; ('a0, Void.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspend", "title": "suspend", "contents": "suspend ", "rendered": "<h4 class='item'>let suspend: 'a0 'e0. (unit -&gt; 'a0) -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-throwWithVoid", "title": "throwWithVoid", "contents": "throwWithVoid ", "rendered": "<h4 class='item'>let throwWithVoid: 'e0. 'e0 -&gt; (Void.t, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-throw", "title": "throw", "contents": "throw ", "rendered": "<h4 class='item'>let throw: 'a0 'e0. 'e0 -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unitWithVoid", "title": "unitWithVoid", "contents": "unitWithVoid t unit Void t", "rendered": "<h4 class='item'>let unitWithVoid: <a href=\"./api/Relude_IO.html#type-t\">t</a>(unit, <a href=\"./api/Relude_IO.html#module-Void\">Void</a>.<a href=\"./api/Relude_IO.html#type-Void.t\">t</a>)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unit", "title": "unit", "contents": "unit ", "rendered": "<h4 class='item'>let unit: 'e0. (unit, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-pureWithVoid", "title": "pureWithVoid", "contents": "pureWithVoid ", "rendered": "<h4 class='item'>let pureWithVoid: 'a0. 'a0 -&gt; ('a0, Void.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-pure", "title": "pure", "contents": "pure ", "rendered": "<h4 class='item'>let pure: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-t", "title": "t", "contents": "t t t unit  t unit t  t Result t unit  unit  t  t t t  t t", "rendered": "<h4 class='item'>type t('a, 'e) = \n  | Pure('a): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Throw('e): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Suspend(unit => 'a): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | SuspendIO(unit => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Async(<a href=\"./api/Relude_IO.html#module-Result\">Result</a>.<a href=\"./api/Relude_IO.html#type-Result.t\">t</a>('a, 'e) => unit => unit): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Map('r => 'a, <a href=\"./api/Relude_IO.html#type-t\">t</a>('r, 'e)): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | FlatMap('r => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e), <a href=\"./api/Relude_IO.html#type-t\">t</a>('r, 'e)): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value->>", "title": ">>", "contents": ">>     ", "rendered": "<h4 class='item'>let >>: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-<<", "title": "<<", "contents": "<<     ", "rendered": "<h4 class='item'>let <<: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html", "title": "Relude_IO", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html", "title": "Relude_IO", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#Relude_IO", "title": "Relude_IO", "contents": "", "rendered": "", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_Function.html#value-Infix.>>", "title": "Infix.>>", "contents": ">>     ", "rendered": "<h4 class='item'>let >>: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-Infix.<<", "title": "Infix.<<", "contents": "<<     ", "rendered": "<h4 class='item'>let <<: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-flatMap", "title": "flatMap", "contents": "flatMap      ", "rendered": "<h4 class='item'>let flatMap: (('a, 'r) => 'b, 'r => 'a, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-bind", "title": "bind", "contents": "bind      ", "rendered": "<h4 class='item'>let bind: ('r => 'a, ('a, 'r) => 'b, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-apply", "title": "apply", "contents": "apply      ", "rendered": "<h4 class='item'>let apply: (('r, 'a) => 'b, 'r => 'a, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-map", "title": "map", "contents": "map     ", "rendered": "<h4 class='item'>let map: ('a => 'b, 'r => 'a, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-pure", "title": "pure", "contents": "pure  ", "rendered": "<h4 class='item'>let pure: ('a, 'r) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-andThen", "title": "andThen", "contents": "andThen     ", "rendered": "<h4 class='item'>let andThen: ('a => 'b, 'b => 'c, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-flipCompose", "title": "flipCompose", "contents": "flipCompose     ", "rendered": "<h4 class='item'>let flipCompose: ('a => 'b, 'b => 'c, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-compose", "title": "compose", "contents": "compose     ", "rendered": "<h4 class='item'>let compose: ('b => 'c, 'a => 'b, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-flip", "title": "flip", "contents": "flip     ", "rendered": "<h4 class='item'>let flip: (('a, 'b) => 'c, 'b, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-const", "title": "const", "contents": "const  ", "rendered": "<h4 class='item'>let const: ('a, 'b) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-id", "title": "id", "contents": "id ", "rendered": "<h4 class='item'>let id: 'a => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-identity", "title": "identity", "contents": "identity ", "rendered": "<h4 class='item'>let identity: 'a => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html", "title": "Relude_Function", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html", "title": "Relude_Function", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#Relude_Function", "title": "Relude_Function", "contents": "", "rendered": "", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Float.html#value-approximatelyEqual", "title": "approximatelyEqual", "contents": "approximatelyEqual float float float bool tolerance  ", "rendered": "<h4 class='item'>let approximatelyEqual: (\n  ~tolerance: float,\n  float,\n  float\n) => bool</h4>", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Float.html", "title": "Relude_Float", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Float.html", "title": "Relude_Float", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Float.html#Relude_Float", "title": "Relude_Float", "contents": "", "rendered": "", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Eff.html#value-Infix.<=<", "title": "Infix.<=<", "contents": "<=< Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let <=<: (\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.>=>", "title": "Infix.>=>", "contents": ">=> Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let >=>: (\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.=<<", "title": "Infix.=<<", "contents": "=<< Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let =<<: ('a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a), <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= Monad t Monad t  Monad t  ", "rendered": "<h4 class='item'>let >>=: (<a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a), 'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let <*>: (<a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a => 'a), <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Monad t  Monad t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Monad t Monad t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a => 'b), <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Monad.t", "title": "Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('a => 'b), <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a => 'a), <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Apply.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Apply.t", "title": "Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Functor.t", "title": "Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b), <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a => 'b), <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-attemptJS", "title": "attemptJS", "contents": "attemptJS t t Belt Result t Js Exn t ", "rendered": "<h4 class='item'>let attemptJS: <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>(Belt.Result.t('a, Js.Exn.t))</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-attempt", "title": "attempt", "contents": "Attempts to run an Eff.t(&#39;a) and catches any exn thrown by the effect and lifts it into Eff.t(Belt.Result.t(&#39;a, exn))", "rendered": "Attempts to run an Eff.t(&#39;a) and catches any exn thrown by the effect and lifts it into Eff.t(Belt.Result.t(&#39;a, exn))", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-attempt", "title": "attempt", "contents": "attempt t t Belt Result t exn ", "rendered": "<h4 class='item'>let attempt: <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>(Belt.Result.t('a, exn))</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-fromThunk", "title": "fromThunk", "contents": "fromThunk unit  t ", "rendered": "<h4 class='item'>let fromThunk: unit => 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-run", "title": "run", "contents": "Unsafely runs the effect or chain of effects. For Eff, this is the same as\njust calling the effect as a function.", "rendered": "Unsafely runs the effect or chain of effects. For Eff, this is the same as\njust calling the effect as a function.", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-run", "title": "run", "contents": "run t ", "rendered": "<h4 class='item'>let run: <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => 'a</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-t", "title": "t", "contents": "This is inspired by bs-effects Effect, purescript Eff and Effect, and John\nDe Goes&#39; basic synchronous IO monad described here:\nhttp://degoes.net/articles/only-one-io", "rendered": "This is inspired by bs-effects <code>Effect</code>, purescript Eff and Effect, and John\nDe Goes&#39; basic synchronous IO monad described here:\nhttp://degoes.net/articles/only-one-io", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-t", "title": "t", "contents": "Eff is a synchronous effect monad.", "rendered": "Eff is a synchronous effect monad.", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-t", "title": "t", "contents": "t unit ", "rendered": "<h4 class='item'>type t('a) = unit => 'a</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html", "title": "Relude_Eff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html", "title": "Relude_Eff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#Relude_Eff", "title": "Relude_Eff", "contents": "", "rendered": "", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Bool.html#value-ifElse", "title": "ifElse", "contents": "ifElse unit  unit  bool   ", "rendered": "<h4 class='item'>let ifElse: (unit => 'a, unit => 'a, bool) => 'a</h4>", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_Bool.html", "title": "Relude_Bool", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_Bool.html", "title": "Relude_Bool", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_Bool.html#Relude_Bool", "title": "Relude_Bool", "contents": "", "rendered": "", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_AsyncResult.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Monad.t", "title": "Monad.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a => 'a, 'a), <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Apply.t", "title": "Apply.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Functor.t", "title": "Functor.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e), <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a => 'b, 'e), <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-mapError", "title": "mapError", "contents": "mapError  t t  ", "rendered": "<h4 class='item'>let mapError: ('e1 => 'e2, <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e1)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e2)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-completeError", "title": "completeError", "contents": "completeError t ", "rendered": "<h4 class='item'>let completeError: 'e => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-completeOk", "title": "completeOk", "contents": "completeOk t ", "rendered": "<h4 class='item'>let completeOk: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-reloadingError", "title": "reloadingError", "contents": "reloadingError t ", "rendered": "<h4 class='item'>let reloadingError: 'e => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-reloadingOk", "title": "reloadingOk", "contents": "reloadingOk t ", "rendered": "<h4 class='item'>let reloadingOk: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-loading", "title": "loading", "contents": "loading t", "rendered": "<h4 class='item'>let loading: <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-init", "title": "init", "contents": "init t", "rendered": "<h4 class='item'>let init: <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-t", "title": "t", "contents": "t Relude_AsyncData t Belt Result t", "rendered": "<h4 class='item'>type t('a, 'e) = <a href=\"./api/Relude_AsyncData.html\">Relude_AsyncData</a>.<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>(Belt.Result.t('a, 'e))</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html", "title": "Relude_AsyncResult", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html", "title": "Relude_AsyncResult", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#Relude_AsyncResult", "title": "Relude_AsyncResult", "contents": "", "rendered": "", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<=<", "title": "Infix.<=<", "contents": "<=< Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let <=<: (\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.>=>", "title": "Infix.>=>", "contents": ">=> Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let >=>: (\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.=<<", "title": "Infix.=<<", "contents": "=<< Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let =<<: ('a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= Monad t Monad t  Monad t  ", "rendered": "<h4 class='item'>let >>=: (<a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a), 'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let <*>: (<a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a => 'a), <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Monad t  Monad t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Monad t Monad t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> Apply t  Apply t Apply t  ", "rendered": "<h4 class='item'>let <*>: (<a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a => 'a), <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Apply t  Apply t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Apply t Apply t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Functor t  Functor t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Functor t Functor t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a => 'b), <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Monad.t", "title": "Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('a => 'b), <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map5", "title": "map5", "contents": "map5      t t t t t t      ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('d),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('e)\n) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('f)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map4", "title": "map4", "contents": "map4     t t t t t     ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('d)\n) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('e)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map3", "title": "map3", "contents": "map3    t t t t    ", "rendered": "<h4 class='item'>let map3: (('a, 'b, 'c) => 'd, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('d)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map2", "title": "map2", "contents": "map2   t t t   ", "rendered": "<h4 class='item'>let map2: (('a, 'b) => 'c, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a => 'a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Apply.t", "title": "Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Alt.alt", "title": "Alt.alt", "contents": "alt t t t  ", "rendered": "<h4 class='item'>let alt: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Alt.map", "title": "Alt.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Alt.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Alt.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Alt.t", "title": "Alt.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Alt", "title": "Alt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Alt", "title": "Alt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Alt", "title": "Alt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Functor.t", "title": "Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a => 'b), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-alt", "title": "alt", "contents": "alt t t t  ", "rendered": "<h4 class='item'>let alt: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-complete", "title": "complete", "contents": "complete t ", "rendered": "<h4 class='item'>let complete: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-reloading", "title": "reloading", "contents": "reloading t ", "rendered": "<h4 class='item'>let reloading: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-loading", "title": "loading", "contents": "loading t", "rendered": "<h4 class='item'>let loading: <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-init", "title": "init", "contents": "init t", "rendered": "<h4 class='item'>let init: <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a) = | Init | Loading | Reloading('a) | Complete('a)\n</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html", "title": "Relude_AsyncData", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html", "title": "Relude_AsyncData", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#Relude_AsyncData", "title": "Relude_AsyncData", "contents": "", "rendered": "", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_Array.html#value-IsoList.toList", "title": "IsoList.toList", "contents": "toList array list ", "rendered": "<h4 class='item'>let toList: array('a) => list('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-IsoList.fromList", "title": "IsoList.fromList", "contents": "fromList list array ", "rendered": "<h4 class='item'>let fromList: list('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-IsoList.t", "title": "IsoList.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-IsoList", "title": "IsoList", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-IsoList", "title": "IsoList", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.mkString", "title": "Sequence.mkString", "contents": "mkString string array string string  ", "rendered": "<h4 class='item'>let mkString: (string, array(string)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.showF", "title": "Sequence.showF", "contents": "showF string  array string  ", "rendered": "<h4 class='item'>let showF: ('a => string, array('a)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.eqF", "title": "Sequence.eqF", "contents": "eqF bool   array array bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, array('a), array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.tailOrEmpty", "title": "Sequence.tailOrEmpty", "contents": "tailOrEmpty array array ", "rendered": "<h4 class='item'>let tailOrEmpty: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.tail", "title": "Sequence.tail", "contents": "tail array option array ", "rendered": "<h4 class='item'>let tail: array('a) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.head", "title": "Sequence.head", "contents": "head array option ", "rendered": "<h4 class='item'>let head: array('a) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.isNotEmpty", "title": "Sequence.isNotEmpty", "contents": "isNotEmpty array bool ", "rendered": "<h4 class='item'>let isNotEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.isEmpty", "title": "Sequence.isEmpty", "contents": "isEmpty array bool ", "rendered": "<h4 class='item'>let isEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.length", "title": "Sequence.length", "contents": "length array int ", "rendered": "<h4 class='item'>let length: array('a) => int</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-Sequence.t", "title": "Sequence.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-Sequence", "title": "Sequence", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-Sequence", "title": "Sequence", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-MonoidAny.empty", "title": "MonoidAny.empty", "contents": "empty array", "rendered": "<h4 class='item'>let empty: array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-MonoidAny.append", "title": "MonoidAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (<a href=\"./api/Relude_Array.html#type-MonoidAny.t\">t</a>('a), <a href=\"./api/Relude_Array.html#type-MonoidAny.t\">t</a>('a)) => <a href=\"./api/Relude_Array.html#type-MonoidAny.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-MonoidAny.t", "title": "MonoidAny.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-MonoidAny", "title": "MonoidAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-SemigroupAny.append", "title": "SemigroupAny.append", "contents": "append array array array  ", "rendered": "<h4 class='item'>let append: (array('a), array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-SemigroupAny.t", "title": "SemigroupAny.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-show", "title": "show", "contents": "show array string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'k),\n  array('a)\n) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-showF", "title": "showF", "contents": "showF string  array string  ", "rendered": "<h4 class='item'>let showF: ('a => string, array('a)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-eq", "title": "eq", "contents": "eq array array bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'j),\n  array('a),\n  array('a)\n) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-eqF", "title": "eqF", "contents": "eqF bool   array array bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, array('a), array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-mkString", "title": "mkString", "contents": "mkString string array string string  ", "rendered": "<h4 class='item'>let mkString: (string, array(string)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-toList", "title": "toList", "contents": "toList array list ", "rendered": "<h4 class='item'>let toList: array('a) => list('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-fromList", "title": "fromList", "contents": "fromList list array ", "rendered": "<h4 class='item'>let fromList: list('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-flatten", "title": "flatten", "contents": "flatten array array array ", "rendered": "<h4 class='item'>let flatten: array(array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-flatMap", "title": "flatMap", "contents": "flatMap array  array array  ", "rendered": "<h4 class='item'>let flatMap: ('a => array('b), array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-bind", "title": "bind", "contents": "bind array array  array  ", "rendered": "<h4 class='item'>let bind: (array('a), 'a => array('b)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-apply", "title": "apply", "contents": "apply array  array array  ", "rendered": "<h4 class='item'>let apply: (array('a => 'b), array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-forEachWithIndex", "title": "forEachWithIndex", "contents": "forEachWithIndex int int unit   array int unit  ", "rendered": "<h4 class='item'>let forEachWithIndex: (\n  (int, int) => unit,\n  array(int)\n) => unit</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-forEach", "title": "forEach", "contents": "forEach unit  array unit  ", "rendered": "<h4 class='item'>let forEach: ('a => unit, array('a)) => unit</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-mapWithIndex", "title": "mapWithIndex", "contents": "mapWithIndex int int   array int array  ", "rendered": "<h4 class='item'>let mapWithIndex: ((int, int) => 'b, array(int)) => array(\n  'b\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-map", "title": "map", "contents": "map  array array  ", "rendered": "<h4 class='item'>let map: ('a => 'b, array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-distinct", "title": "distinct", "contents": "distinct bool   array array  ", "rendered": "<h4 class='item'>let distinct: (('a, 'a) => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-all", "title": "all", "contents": "all bool  array bool  ", "rendered": "<h4 class='item'>let all: ('a => bool, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-indexOf", "title": "indexOf", "contents": "indexOf bool   array option int   ", "rendered": "<h4 class='item'>let indexOf: (('a, 'a) => bool, 'a, array('a)) => option(\n  int\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-contains", "title": "contains", "contents": "contains bool   array bool   ", "rendered": "<h4 class='item'>let contains: (('a, 'a) => bool, 'a, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-any", "title": "any", "contents": "any bool  array bool  ", "rendered": "<h4 class='item'>let any: ('a => bool, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-reverse", "title": "reverse", "contents": "reverse array array ", "rendered": "<h4 class='item'>let reverse: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-shuffleInPlace", "title": "shuffleInPlace", "contents": "shuffleInPlace array array ", "rendered": "<h4 class='item'>let shuffleInPlace: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-sort", "title": "sort", "contents": "sort BsAbstract Interface ordering   array array  ", "rendered": "<h4 class='item'>let sort: (\n  ('a, 'a) => BsAbstract.Interface.ordering,\n  array('a)\n) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-sortWithInt", "title": "sortWithInt", "contents": "sortWithInt int   array array  ", "rendered": "<h4 class='item'>let sortWithInt: (('a, 'a) => int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-unzip", "title": "unzip", "contents": "unzip array array array ", "rendered": "<h4 class='item'>let unzip: array(('a, 'b)) => (array('a), array('b))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-zipWithIndex", "title": "zipWithIndex", "contents": "zipWithIndex array array int ", "rendered": "<h4 class='item'>let zipWithIndex: array('a) => array(('a, int))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-zipWith", "title": "zipWith", "contents": "zipWith   array array array   ", "rendered": "<h4 class='item'>let zipWith: (\n  ('a, 'b) => 'c,\n  array('a),\n  array('b)\n) => array('c)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-zip", "title": "zip", "contents": "zip array array array  ", "rendered": "<h4 class='item'>let zip: (array('a), array('b)) => array(('a, 'b))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-replicate", "title": "replicate", "contents": "replicate int array array  ", "rendered": "<h4 class='item'>let replicate: (int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-intersperse", "title": "intersperse", "contents": "intersperse array array  ", "rendered": "<h4 class='item'>let intersperse: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-prependToAll", "title": "prependToAll", "contents": "prependToAll array array  ", "rendered": "<h4 class='item'>let prependToAll: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-splitAt", "title": "splitAt", "contents": "splitAt int array option array array  ", "rendered": "<h4 class='item'>let splitAt: (int, array('a)) => option(\n  (array('a), array('a))\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-partition", "title": "partition", "contents": "partition bool  array array array  ", "rendered": "<h4 class='item'>let partition: ('a => bool, array('a)) => (\n  array('a),\n  array('a)\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-findWithIndex", "title": "findWithIndex", "contents": "findWithIndex int bool   array option  ", "rendered": "<h4 class='item'>let findWithIndex: (('a, int) => bool, array('a)) => option(\n  'a\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-find", "title": "find", "contents": "find bool  array option  ", "rendered": "<h4 class='item'>let find: ('a => bool, array('a)) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-filterWithIndex", "title": "filterWithIndex", "contents": "filterWithIndex int bool   array array  ", "rendered": "<h4 class='item'>let filterWithIndex: (\n  ('a, int) => bool,\n  array('a)\n) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-filter", "title": "filter", "contents": "filter bool  array array  ", "rendered": "<h4 class='item'>let filter: ('a => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-dropWhile", "title": "dropWhile", "contents": "dropWhile bool  array array  ", "rendered": "<h4 class='item'>let dropWhile: ('a => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-dropUpTo", "title": "dropUpTo", "contents": "dropUpTo int array array  ", "rendered": "<h4 class='item'>let dropUpTo: (int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-drop", "title": "drop", "contents": "drop int array option array  ", "rendered": "<h4 class='item'>let drop: (int, array('a)) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-takeWhile", "title": "takeWhile", "contents": "takeWhile bool  array array  ", "rendered": "<h4 class='item'>let takeWhile: ('a => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-takeUpTo", "title": "takeUpTo", "contents": "takeUpTo int array array  ", "rendered": "<h4 class='item'>let takeUpTo: (int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-take", "title": "take", "contents": "take int array option array  ", "rendered": "<h4 class='item'>let take: (int, array('a)) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-last", "title": "last", "contents": "last array option ", "rendered": "<h4 class='item'>let last: array('a) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-init", "title": "init", "contents": "init array option array ", "rendered": "<h4 class='item'>let init: array('a) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-tailOrEmpty", "title": "tailOrEmpty", "contents": "tailOrEmpty array array ", "rendered": "<h4 class='item'>let tailOrEmpty: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-tail", "title": "tail", "contents": "tail array option array ", "rendered": "<h4 class='item'>let tail: array('a) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-head", "title": "head", "contents": "head array option ", "rendered": "<h4 class='item'>let head: array('a) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-set", "title": "set", "contents": "set int array bool   ", "rendered": "<h4 class='item'>let set: (int, 'a, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-get", "title": "get", "contents": "get int array option  ", "rendered": "<h4 class='item'>let get: (int, array('a)) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-scanRight", "title": "scanRight", "contents": "scanRight   array array   ", "rendered": "<h4 class='item'>let scanRight: (('a, 'b) => 'b, 'b, array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-scanLeft", "title": "scanLeft", "contents": "scanLeft   array array   ", "rendered": "<h4 class='item'>let scanLeft: (('b, 'a) => 'b, 'b, array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-foldRight", "title": "foldRight", "contents": "foldRight   array   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, array('a)) => 'b</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft   array   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, array('a)) => 'b</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-append", "title": "append", "contents": "append array array  ", "rendered": "<h4 class='item'>let append: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-prepend", "title": "prepend", "contents": "prepend array array  ", "rendered": "<h4 class='item'>let prepend: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-uncons", "title": "uncons", "contents": "uncons array option array ", "rendered": "<h4 class='item'>let uncons: array('a) => option(('a, array('a)))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-cons", "title": "cons", "contents": "cons array array  ", "rendered": "<h4 class='item'>let cons: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-concat", "title": "concat", "contents": "concat array array array  ", "rendered": "<h4 class='item'>let concat: (array('a), array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-makeWithIndex", "title": "makeWithIndex", "contents": "makeWithIndex int int  array  ", "rendered": "<h4 class='item'>let makeWithIndex: (int, int => 'a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-repeat", "title": "repeat", "contents": "repeat int array  ", "rendered": "<h4 class='item'>let repeat: (int, 'a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-one", "title": "one", "contents": "one array ", "rendered": "<h4 class='item'>let one: 'a => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-pure", "title": "pure", "contents": "pure array ", "rendered": "<h4 class='item'>let pure: 'a => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-empty", "title": "empty", "contents": "empty array", "rendered": "<h4 class='item'>let empty: array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-isNotEmpty", "title": "isNotEmpty", "contents": "isNotEmpty array bool ", "rendered": "<h4 class='item'>let isNotEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-isEmpty", "title": "isEmpty", "contents": "isEmpty array bool ", "rendered": "<h4 class='item'>let isEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-length", "title": "length", "contents": "length array int ", "rendered": "<h4 class='item'>let length: array('a) => int</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html", "title": "Relude_Array", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html", "title": "Relude_Array", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#Relude_Array", "title": "Relude_Array", "contents": "", "rendered": "", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Aff.html#type-JsExn.ErrorType.t", "title": "JsExn.ErrorType.t", "contents": "t Js Exn t", "rendered": "<h4 class='item'>type t = Js.Exn.t</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn.ErrorType", "title": "JsExn.ErrorType", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn.ErrorType", "title": "JsExn.ErrorType", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn", "title": "JsExn", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn", "title": "JsExn", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Monad.t", "title": "Monad.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a => 'a, 'a), <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Apply.t", "title": "Apply.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Functor.t", "title": "Functor.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e), <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a => 'b, 'e), <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-voidError", "title": "voidError", "contents": "voidError t t unit ", "rendered": "<h4 class='item'>let voidError: <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e1) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, unit)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-mapError", "title": "mapError", "contents": "mapError  t t  ", "rendered": "<h4 class='item'>let mapError: ('e1 => 'e2, <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e1)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e2)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromEffAttemptJS", "title": "fromEffAttemptJS", "contents": "fromEffAttemptJS Relude_Eff t Belt Result t Js Exn t t Js Exn t ", "rendered": "<h4 class='item'>let fromEffAttemptJS: <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>(\n  Belt.Result.t('a, Js.Exn.t)\n) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Js.Exn.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromEff", "title": "fromEff", "contents": "fromEff Relude_Eff t t ", "rendered": "<h4 class='item'>let fromEff: <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromResult", "title": "fromResult", "contents": "fromResult Belt Result t t ", "rendered": "<h4 class='item'>let fromResult: Belt.Result.t('a, 'e) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromOption", "title": "fromOption", "contents": "fromOption option t  ", "rendered": "<h4 class='item'>let fromOption: ('e, option('a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'e => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-run", "title": "run", "contents": "run t unit unit ", "rendered": "<h4 class='item'>let run: <a href=\"./api/Relude_Aff.html#type-t\">t</a>(unit, 'e) => unit</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-t", "title": "t", "contents": "t Belt Result t Relude_Eff t unit  Relude_Eff t unit ", "rendered": "<h4 class='item'>type t('a, 'e) = Belt.Result.t('a, 'e) => <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>(\n  unit\n) => <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>(unit)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html", "title": "Relude_Aff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html", "title": "Relude_Aff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#Relude_Aff", "title": "Relude_Aff", "contents": "", "rendered": "", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude.html", "title": "Relude", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude"},
{"href": "./api/Relude.html", "title": "Relude", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude"},
{"href": "./api/Relude.html#Relude", "title": "Relude", "contents": "", "rendered": "", "breadcrumb": "Relude"},
{"href": "./api/Test.html#value-mapError", "title": "mapError", "contents": "mapError ", "rendered": "<h4 class='item'>let mapError: 'e1 'e2 'a0. ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) t -&gt; ('a0, 'e2) t</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Test.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#value-throw", "title": "throw", "contents": "throw t ", "rendered": "<h4 class='item'>let throw: 'e => <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html#type-t", "title": "t", "contents": "t t t  t t", "rendered": "<h4 class='item'>type t('a, 'e) = \n  | Pure('a): <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)\n  | Throw('e): <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)\n  | Map('r => 'a, <a href=\"./api/Test.html#type-t\">t</a>('r, 'e)): <a href=\"./api/Test.html#type-t\">t</a>('a, 'e)\n</h4>", "breadcrumb": "Test"},
{"href": "./api/Test.html", "title": "Test", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Test"},
{"href": "./api/Test.html", "title": "Test", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Test"},
{"href": "./api/Test.html#Test", "title": "Test", "contents": "", "rendered": "", "breadcrumb": "Test"},
{"href": "./api/Relude_Void.html#value-show", "title": "show", "contents": "Show for Void.t is absurd because there is no value of type Void.t that can be shown.", "rendered": "Show for Void.t is absurd because there is no value of type Void.t that can be shown.", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#value-show", "title": "show", "contents": "show t string ", "rendered": "<h4 class='item'>let show: <a href=\"./api/Relude_Void.html#type-t\">t</a> => string</h4>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#value-absurd", "title": "absurd", "contents": "A function that can be used when you need to provide a function from Void.t =&gt; &#39;a.\nThe function will never actually be called, because it&#39;s impossible to construct a valud of type Void.t.", "rendered": "A function that can be used when you need to provide a function from Void.t =&gt; &#39;a.\nThe function will never actually be called, because it&#39;s impossible to construct a valud of type Void.t.", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#value-absurd", "title": "absurd", "contents": "absurd t ", "rendered": "<h4 class='item'>let absurd: <a href=\"./api/Relude_Void.html#type-t\">t</a> => 'a</h4>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#type-t", "title": "t", "contents": "Void.t is a type for which it is impossible to construct a value.", "rendered": "Void.t is a type for which it is impossible to construct a value.", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#type-t", "title": "t", "contents": "t t", "rendered": "<h4 class='item'>type t = | Void(<a href=\"./api/Relude_Void.html#type-t\">t</a>)\n</h4>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html", "title": "Relude_Void", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html", "title": "Relude_Void", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Void.html#Relude_Void", "title": "Relude_Void", "contents": "", "rendered": "", "breadcrumb": "Relude_Void"},
{"href": "./api/Relude_Validation.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t Errors t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t(Error.t))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  Errors t t Errors t t Errors t  ", "rendered": "<h4 class='item'>let apply: (\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a => 'a, Errors.t('a)),\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t('a))\n) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t('a))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-Apply.t", "title": "Apply.t", "contents": "t t Errors t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t(Error.t))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-Functor.t", "title": "Functor.t", "contents": "t t Errors t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, Errors.t(Error.t))</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-toResult", "title": "toResult", "contents": "toResult t Belt Result t ", "rendered": "<h4 class='item'>let toResult: <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b) => Belt.Result.t('a, 'b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-fromResult", "title": "fromResult", "contents": "fromResult Belt Result t t ", "rendered": "<h4 class='item'>let fromResult: Belt.Result.t('a, 'b) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-flatMapV", "title": "flatMapV", "contents": "This function performs a flatMap-like operation, but if the f fails, all previous errors are discarded.\nValidation is not a traditional Monad, because the point of it is to preserve the errors via a Semigroup.", "rendered": "This function performs a flatMap-like operation, but if the <code>f</code> fails, all previous errors are discarded.\nValidation is not a traditional Monad, because the point of it is to preserve the errors via a Semigroup.", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-flatMapV", "title": "flatMapV", "contents": "flatMapV t t  t  ", "rendered": "<h4 class='item'>let flatMapV: (<a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-apply", "title": "apply", "contents": "apply t  t   t   ", "rendered": "<h4 class='item'>let apply: (\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a => 'a, 'a),\n  <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a),\n  ('a, 'a) => 'a\n) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-mapError", "title": "mapError", "contents": "mapError  t t  ", "rendered": "<h4 class='item'>let mapError: ('a => 'a, <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-isError", "title": "isError", "contents": "isError t bool ", "rendered": "<h4 class='item'>let isError: <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b) => bool</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-isOk", "title": "isOk", "contents": "isOk t bool ", "rendered": "<h4 class='item'>let isOk: <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'b) => bool</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-t", "title": "t", "contents": "Similar to Belt.Result, but has an Applicative instance that collects the errors using a semigroup, rather than fail-fast\nsemantics.", "rendered": "Similar to Belt.Result, but has an Applicative instance that collects the errors using a semigroup, rather than fail-fast\nsemantics.", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a, 'e) = | VOk('a) | VError('e)\n</h4>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html", "title": "Relude_Validation", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html", "title": "Relude_Validation", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_Validation.html#Relude_Validation", "title": "Relude_Validation", "contents": "", "rendered": "", "breadcrumb": "Relude_Validation"},
{"href": "./api/Relude_String.html#value-splitList", "title": "splitList", "contents": "splitList string string list string  ", "rendered": "<h4 class='item'>let splitList: (string, string) => list(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-splitArray", "title": "splitArray", "contents": "splitArray string string array string  ", "rendered": "<h4 class='item'>let splitArray: (string, string) => array(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-sliceToEnd", "title": "sliceToEnd", "contents": "sliceToEnd int string string  ", "rendered": "<h4 class='item'>let sliceToEnd: (int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-slice", "title": "slice", "contents": "slice int int string string   ", "rendered": "<h4 class='item'>let slice: (int, int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-replaceRegex", "title": "replaceRegex", "contents": "replaceRegex Js Re t string string string   ", "rendered": "<h4 class='item'>let replaceRegex: (Js.Re.t, string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-replace", "title": "replace", "contents": "replace string string string string   ", "rendered": "<h4 class='item'>let replace: (string, string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-lastIndexOf", "title": "lastIndexOf", "contents": "lastIndexOf string string option int  ", "rendered": "<h4 class='item'>let lastIndexOf: (string, string) => option(int)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-indexOf", "title": "indexOf", "contents": "indexOf string string option int  ", "rendered": "<h4 class='item'>let indexOf: (string, string) => option(int)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-contains", "title": "contains", "contents": "contains string string bool  ", "rendered": "<h4 class='item'>let contains: (string, string) => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-startsWith", "title": "startsWith", "contents": "startsWith string string bool  ", "rendered": "<h4 class='item'>let startsWith: (string, string) => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-endsWith", "title": "endsWith", "contents": "endsWith string string bool  ", "rendered": "<h4 class='item'>let endsWith: (string, string) => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-concatList", "title": "concatList", "contents": "concatList list string string ", "rendered": "<h4 class='item'>let concatList: list(string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-concatArray", "title": "concatArray", "contents": "concatArray array string string ", "rendered": "<h4 class='item'>let concatArray: array(string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-concat", "title": "concat", "contents": "concat string string string  ", "rendered": "<h4 class='item'>let concat: (string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-foldRight", "title": "foldRight", "contents": "foldRight string   string   ", "rendered": "<h4 class='item'>let foldRight: ((string, 'b) => 'b, 'b, string) => 'b</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft string   string   ", "rendered": "<h4 class='item'>let foldLeft: (('b, string) => 'b, 'b, string) => 'b</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-map", "title": "map", "contents": "map string string  string string  ", "rendered": "<h4 class='item'>let map: (string => string, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toArray", "title": "toArray", "contents": "toArray string array string ", "rendered": "<h4 class='item'>let toArray: string => array(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toList", "title": "toList", "contents": "toList string list string ", "rendered": "<h4 class='item'>let toList: string => list(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-getOrThrow", "title": "getOrThrow", "contents": "getOrThrow int string string  ", "rendered": "<h4 class='item'>let getOrThrow: (int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-getNullable", "title": "getNullable", "contents": "getNullable int string Js Nullable t string  ", "rendered": "<h4 class='item'>let getNullable: (int, string) => Js.Nullable.t(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-get", "title": "get", "contents": "get int string option string  ", "rendered": "<h4 class='item'>let get: (int, string) => option(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toLowerCase", "title": "toLowerCase", "contents": "toLowerCase string string ", "rendered": "<h4 class='item'>let toLowerCase: string => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toUpperCase", "title": "toUpperCase", "contents": "toUpperCase string string ", "rendered": "<h4 class='item'>let toUpperCase: string => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-repeat", "title": "repeat", "contents": "repeat int string string  ", "rendered": "<h4 class='item'>let repeat: (int, string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-makeWithIndex", "title": "makeWithIndex", "contents": "makeWithIndex int int string  string  ", "rendered": "<h4 class='item'>let makeWithIndex: (int, int => string) => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-fromCharCode", "title": "fromCharCode", "contents": "fromCharCode int string ", "rendered": "<h4 class='item'>let fromCharCode: int => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-make", "title": "make", "contents": "make string ", "rendered": "<h4 class='item'>let make: 'a => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toNonWhitespace", "title": "toNonWhitespace", "contents": "toNonWhitespace string option string ", "rendered": "<h4 class='item'>let toNonWhitespace: string => option(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-isWhitespace", "title": "isWhitespace", "contents": "isWhitespace string bool ", "rendered": "<h4 class='item'>let isWhitespace: string => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-toNonEmpty", "title": "toNonEmpty", "contents": "toNonEmpty string option string ", "rendered": "<h4 class='item'>let toNonEmpty: string => option(string)</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-isNotEmpty", "title": "isNotEmpty", "contents": "isNotEmpty string bool ", "rendered": "<h4 class='item'>let isNotEmpty: string => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-isEmpty", "title": "isEmpty", "contents": "isEmpty string bool ", "rendered": "<h4 class='item'>let isEmpty: string => bool</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-trim", "title": "trim", "contents": "trim string string ", "rendered": "<h4 class='item'>let trim: string => string</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#value-length", "title": "length", "contents": "length string int ", "rendered": "<h4 class='item'>let length: string => int</h4>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html", "title": "Relude_String", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html", "title": "Relude_String", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_String.html#Relude_String", "title": "Relude_String", "contents": "", "rendered": "", "breadcrumb": "Relude_String"},
{"href": "./api/Relude_Sequence.html", "title": "Relude_Sequence", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Sequence"},
{"href": "./api/Relude_Sequence.html", "title": "Relude_Sequence", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Sequence"},
{"href": "./api/Relude_Sequence.html#Relude_Sequence", "title": "Relude_Sequence", "contents": "", "rendered": "", "breadcrumb": "Relude_Sequence"},
{"href": "./api/Relude_ResultIor.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Monad.t", "title": "Monad.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  E t t E t t E t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a => 'a, E.t), <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Apply.t", "title": "Apply.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-Functor.t", "title": "Functor.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map5", "title": "map5", "contents": "map5      t t t t t   t       ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('d, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('e, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('f, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map4", "title": "map4", "contents": "map4     t t t t   t      ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('d, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('e, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map3", "title": "map3", "contents": "map3    t t t   t     ", "rendered": "<h4 class='item'>let map3: (\n  ('a, 'b, 'c) => 'd,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('d, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map2", "title": "map2", "contents": "map2   t t   t    ", "rendered": "<h4 class='item'>let map2: (\n  ('a, 'b) => 'c,\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'x),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'x),\n  ('x, 'x) => 'x\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('c, 'x)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e), <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-apply", "title": "apply", "contents": "apply t  t   t   ", "rendered": "<h4 class='item'>let apply: (\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a => 'b, 'e),\n  <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e),\n  ('e, 'e) => 'e\n) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-both", "title": "both", "contents": "both t  ", "rendered": "<h4 class='item'>let both: ('a, 'e) => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'e => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_ResultIor.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-t", "title": "t", "contents": "E.g. if you are doing applicative validation to construct a User model, you could parse a phone number and\nallow it, but collect a warning that certain phone number formats are deprecated.", "rendered": "E.g. if you are doing applicative validation to construct a User model, you could parse a phone number and\nallow it, but collect a warning that certain phone number formats are deprecated.", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-t", "title": "t", "contents": "ResultIor is similar to Belt.Result, but it has the ability to collect &quot;non-fatal warning&quot; information\nduring applicative validation.", "rendered": "ResultIor is similar to Belt.Result, but it has the ability to collect &quot;non-fatal warning&quot; information\nduring applicative validation.", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a, 'e) = | IOk('a) | IError('e) | IBoth('a, 'e)\n</h4>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html", "title": "Relude_ResultIor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html", "title": "Relude_ResultIor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_ResultIor.html#Relude_ResultIor", "title": "Relude_ResultIor", "contents": "", "rendered": "", "breadcrumb": "Relude_ResultIor"},
{"href": "./api/Relude_Result.html#value-MonadError.catchError", "title": "MonadError.catchError", "contents": "catchError Belt Result t  Belt Result t Belt Result t  ", "rendered": "<h4 class='item'>let catchError: (\n  'a => Belt.Result.t('a, 'a),\n  Belt.Result.t('a, 'a)\n) => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.throwError", "title": "MonadError.throwError", "contents": "throwError Belt Result t ", "rendered": "<h4 class='item'>let throwError: 'a => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.flat_map", "title": "MonadError.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.pure", "title": "MonadError.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.apply", "title": "MonadError.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadError.map", "title": "MonadError.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#type-MonadError.t", "title": "MonadError.t", "contents": "t Belt Result t E t", "rendered": "<h4 class='item'>type t('a) = Belt.Result.t('a, E.t)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadError", "title": "MonadError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.throwError", "title": "MonadThrow.throwError", "contents": "throwError Belt Result t ", "rendered": "<h4 class='item'>let throwError: 'a => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.flat_map", "title": "MonadThrow.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.pure", "title": "MonadThrow.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.apply", "title": "MonadThrow.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-MonadThrow.map", "title": "MonadThrow.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#type-MonadThrow.t", "title": "MonadThrow.t", "contents": "t Belt Result t E t", "rendered": "<h4 class='item'>type t('a) = Belt.Result.t('a, E.t)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#module-MonadThrow", "title": "MonadThrow", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-toValidationNel", "title": "toValidationNel", "contents": "toValidationNel Belt Result t Relude_Validation t List t ", "rendered": "<h4 class='item'>let toValidationNel: Belt.Result.t(\n  'a,\n  'e\n) => <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, <a href=\"./api/Relude_NonEmpty.html#module-List\" title=\"Relude_NonEmpty.List\">List</a>.<a href=\"./api/Relude_NonEmpty.html#type-List.t\">t</a>('e))</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-fromValidation", "title": "fromValidation", "contents": "fromValidation Relude_Validation t Belt Result t ", "rendered": "<h4 class='item'>let fromValidation: <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>(\n  'a,\n  'a\n) => Belt.Result.t('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-toValidation", "title": "toValidation", "contents": "toValidation Belt Result t Relude_Validation t ", "rendered": "<h4 class='item'>let toValidation: Belt.Result.t(\n  'a,\n  'a\n) => <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-toOption", "title": "toOption", "contents": "toOption ", "rendered": "<h4 class='item'>let toOption: 'a0 'e0. ('a0, 'e0) Belt.Result.t -&gt; 'a0 option</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-fromOption", "title": "fromOption", "contents": "fromOption ", "rendered": "<h4 class='item'>let fromOption: 'a0 'e0. (unit -&gt; 'e0) -&gt; 'a0 option -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-recover", "title": "recover", "contents": "recover ", "rendered": "<h4 class='item'>let recover: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) Belt.Result.t -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-catchError", "title": "catchError", "contents": "catchError ", "rendered": "<h4 class='item'>let catchError: 'a0 'e0.\n  ('e0 -&gt; ('a0, 'e0) Belt.Result.t) -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-alt", "title": "alt", "contents": "alt ", "rendered": "<h4 class='item'>let alt: 'a0 'e0.\n  ('a0, 'e0) Belt.Result.t -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-fold", "title": "fold", "contents": "fold ", "rendered": "<h4 class='item'>let fold: 'a0 'e0 'c0. ('a0 -&gt; 'c0) -&gt; ('e0 -&gt; 'c0) -&gt; ('a0, 'e0) Belt.Result.t -&gt; 'c0</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-flatMap", "title": "flatMap", "contents": "flatMap ", "rendered": "<h4 class='item'>let flatMap: 'a0 'b0 'e0.\n  ('a0 -&gt; ('b0, 'e0) Belt.Result.t) -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-bind", "title": "bind", "contents": "bind ", "rendered": "<h4 class='item'>let bind: 'a0 'b0 'e0.\n  ('a0, 'e0) Belt.Result.t -&gt;\n  ('a0 -&gt; ('b0, 'e0) Belt.Result.t) -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map5", "title": "map5", "contents": "map5 ", "rendered": "<h4 class='item'>let map5: 'a0 'b0 'c0 'd0 'e0 'f0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0 -&gt; 'd0 -&gt; 'e0 -&gt; 'f0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt;\n  ('c0, 'x) Belt.Result.t -&gt;\n  ('d0, 'x) Belt.Result.t -&gt;\n  ('e0, 'x) Belt.Result.t -&gt; ('f0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map4", "title": "map4", "contents": "map4 ", "rendered": "<h4 class='item'>let map4: 'a0 'b0 'c0 'd0 'e0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0 -&gt; 'd0 -&gt; 'e0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt;\n  ('c0, 'x) Belt.Result.t -&gt;\n  ('d0, 'x) Belt.Result.t -&gt; ('e0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map3", "title": "map3", "contents": "map3 ", "rendered": "<h4 class='item'>let map3: 'a0 'b0 'c0 'd0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0 -&gt; 'd0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt;\n  ('c0, 'x) Belt.Result.t -&gt; ('d0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map2", "title": "map2", "contents": "map2 ", "rendered": "<h4 class='item'>let map2: 'a0 'b0 'c0 'x.\n  ('a0 -&gt; 'b0 -&gt; 'c0) -&gt;\n  ('a0, 'x) Belt.Result.t -&gt;\n  ('b0, 'x) Belt.Result.t -&gt; ('c0, 'x) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-apply", "title": "apply", "contents": "apply ", "rendered": "<h4 class='item'>let apply: 'a0 'b0 'e0.\n  ('a0 -&gt; 'b0, 'e0) Belt.Result.t -&gt;\n  ('a0, 'e0) Belt.Result.t -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-tap", "title": "tap", "contents": "tap ", "rendered": "<h4 class='item'>let tap: 'a0 'e0. ('a0 -&gt; unit) -&gt; ('a0, 'e0) Belt.Result.t -&gt; unit</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-bimap", "title": "bimap", "contents": "bimap ", "rendered": "<h4 class='item'>let bimap: 'a0 'b0 'e1 'e2.\n  ('a0 -&gt; 'b0) -&gt;\n  ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) Belt.Result.t -&gt; ('b0, 'e2) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-mapError", "title": "mapError", "contents": "mapError ", "rendered": "<h4 class='item'>let mapError: 'a0 'e1 'e2.\n  ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) Belt.Result.t -&gt; ('a0, 'e2) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-map", "title": "map", "contents": "map ", "rendered": "<h4 class='item'>let map: 'a0 'b0 'e0.\n  ('a0 -&gt; 'b0) -&gt; ('a0, 'e0) Belt.Result.t -&gt; ('b0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-unit", "title": "unit", "contents": "unit ", "rendered": "<h4 class='item'>let unit: 'e0. (unit, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-error", "title": "error", "contents": "error ", "rendered": "<h4 class='item'>let error: 'a0 'e0. 'e0 -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-ok", "title": "ok", "contents": "ok ", "rendered": "<h4 class='item'>let ok: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#value-pure", "title": "pure", "contents": "pure ", "rendered": "<h4 class='item'>let pure: 'a0 'e0. 'a0 -&gt; ('a0, 'e0) Belt.Result.t</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#type-t", "title": "t", "contents": "t Belt Result t", "rendered": "<h4 class='item'>type t('a, 'e) = Belt.Result.t('a, 'e)</h4>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html", "title": "Relude_Result", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html", "title": "Relude_Result", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Result.html#Relude_Result", "title": "Relude_Result", "contents": "", "rendered": "", "breadcrumb": "Relude_Result"},
{"href": "./api/Relude_Ordering.html#value-toInt", "title": "toInt", "contents": "toInt BsAbstract Interface ordering int ", "rendered": "<h4 class='item'>let toInt: BsAbstract.Interface.ordering => int</h4>", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html#value-fromInt", "title": "fromInt", "contents": "fromInt int BsAbstract Interface ordering ", "rendered": "<h4 class='item'>let fromInt: int => BsAbstract.Interface.ordering</h4>", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html", "title": "Relude_Ordering", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html", "title": "Relude_Ordering", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Ordering.html#Relude_Ordering", "title": "Relude_Ordering", "contents": "", "rendered": "", "breadcrumb": "Relude_Ordering"},
{"href": "./api/Relude_Option.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= option  option option  ", "rendered": "<h4 class='item'>let >>=: ('a => option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> option  option option  ", "rendered": "<h4 class='item'>let <*>: (option('a => 'a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  option option  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.<|>", "title": "Infix.<|>", "contents": "<|> option option option  ", "rendered": "<h4 class='item'>let <|>: (option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Infix.|?", "title": "Infix.|?", "contents": "|? option unit   ", "rendered": "<h4 class='item'>let |?: (option('a), unit => 'a) => 'a</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map5", "title": "map5", "contents": "map5      option option option option option option      ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  option('a),\n  option('b),\n  option('c),\n  option('d),\n  option('e)\n) => option('f)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map4", "title": "map4", "contents": "map4     option option option option option     ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  option('a),\n  option('b),\n  option('c),\n  option('d)\n) => option('e)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map3", "title": "map3", "contents": "map3    option option option option    ", "rendered": "<h4 class='item'>let map3: (\n  ('a, 'b, 'c) => 'd,\n  option('a),\n  option('b),\n  option('c)\n) => option('d)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map2", "title": "map2", "contents": "map2   option option option   ", "rendered": "<h4 class='item'>let map2: (\n  ('a, 'b) => 'c,\n  option('a),\n  option('b)\n) => option('c)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Monoid_Any.empty", "title": "Monoid_Any.empty", "contents": "empty option", "rendered": "<h4 class='item'>let empty: option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Monoid_Any.append", "title": "Monoid_Any.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (<a href=\"./api/Relude_Option.html#type-Monoid_Any.t\">t</a>('a), <a href=\"./api/Relude_Option.html#type-Monoid_Any.t\">t</a>('a)) => <a href=\"./api/Relude_Option.html#type-Monoid_Any.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#type-Monoid_Any.t", "title": "Monoid_Any.t", "contents": "t Semigroup_Any t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Option.html#module-Semigroup_Any\">Semigroup_Any</a>.<a href=\"./api/Relude_Option.html#type-Semigroup_Any.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Monoid_Any", "title": "Monoid_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Monoid_Any", "title": "Monoid_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Monoid_Any", "title": "Monoid_Any", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-Semigroup_Any.append", "title": "Semigroup_Any.append", "contents": "append option option option  ", "rendered": "<h4 class='item'>let append: (option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#type-Semigroup_Any.t", "title": "Semigroup_Any.t", "contents": "t option", "rendered": "<h4 class='item'>type t('a) = option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Semigroup_Any", "title": "Semigroup_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#module-Semigroup_Any", "title": "Semigroup_Any", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-eq", "title": "eq", "contents": "eq option option bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'i),\n  option('a),\n  option('a)\n) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-eqF", "title": "eqF", "contents": "eqF bool   option option bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, option('a), option('a)) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-flatten", "title": "flatten", "contents": "flatten option option option ", "rendered": "<h4 class='item'>let flatten: option(option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-filter", "title": "filter", "contents": "filter bool  option option  ", "rendered": "<h4 class='item'>let filter: ('a => bool, option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-empty", "title": "empty", "contents": "empty option", "rendered": "<h4 class='item'>let empty: option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-alt", "title": "alt", "contents": "alt option option option  ", "rendered": "<h4 class='item'>let alt: (option('a), option('a)) => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-foldRight", "title": "foldRight", "contents": "foldRight   option   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft   option   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-flatMap", "title": "flatMap", "contents": "flatMap option  option option  ", "rendered": "<h4 class='item'>let flatMap: ('a => option('b), option('a)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-bind", "title": "bind", "contents": "bind option option  option  ", "rendered": "<h4 class='item'>let bind: (option('a), 'a => option('b)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-pure", "title": "pure", "contents": "pure option ", "rendered": "<h4 class='item'>let pure: 'a => option('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-apply", "title": "apply", "contents": "apply option  option option  ", "rendered": "<h4 class='item'>let apply: (option('a => 'b), option('a)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-map", "title": "map", "contents": "map  option option  ", "rendered": "<h4 class='item'>let map: ('a => 'b, option('a)) => option('b)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-isNone", "title": "isNone", "contents": "isNone option bool ", "rendered": "<h4 class='item'>let isNone: option('a) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-isSome", "title": "isSome", "contents": "isSome option bool ", "rendered": "<h4 class='item'>let isSome: option('a) => bool</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-toArray", "title": "toArray", "contents": "toArray option array ", "rendered": "<h4 class='item'>let toArray: option('a) => array('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-toList", "title": "toList", "contents": "toList option list ", "rendered": "<h4 class='item'>let toList: option('a) => list('a)</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-getOrElseStrict", "title": "getOrElseStrict", "contents": "getOrElseStrict option  ", "rendered": "<h4 class='item'>let getOrElseStrict: ('a, option('a)) => 'a</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-getOrElse", "title": "getOrElse", "contents": "getOrElse unit  option  ", "rendered": "<h4 class='item'>let getOrElse: (unit => 'a, option('a)) => 'a</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-foldStrict", "title": "foldStrict", "contents": "foldStrict  option   ", "rendered": "<h4 class='item'>let foldStrict: ('b, 'a => 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#value-fold", "title": "fold", "contents": "fold unit   option   ", "rendered": "<h4 class='item'>let fold: (unit => 'b, 'a => 'b, option('a)) => 'b</h4>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html", "title": "Relude_Option", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html", "title": "Relude_Option", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_Option.html#Relude_Option", "title": "Relude_Option", "contents": "", "rendered": "", "breadcrumb": "Relude_Option"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Eq.eq", "title": "NonEmptyF.Eq.eq", "contents": "eq t EqA t t EqA t bool  ", "rendered": "<h4 class='item'>let eq: (t(EqA.t), t(EqA.t)) => bool</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Eq.t", "title": "NonEmptyF.Eq.t", "contents": "t t EqA t", "rendered": "<h4 class='item'>type t = t(EqA.t)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Eq", "title": "NonEmptyF.Eq", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Eq", "title": "NonEmptyF.Eq", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.sequence", "title": "NonEmptyF.Traversable.sequence", "contents": "sequence t applicative_t applicative_t t ", "rendered": "<h4 class='item'>let sequence: t(applicative_t('a)) => applicative_t(t('a))</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.traverse", "title": "NonEmptyF.Traversable.traverse", "contents": "traverse applicative_t  t applicative_t t  ", "rendered": "<h4 class='item'>let traverse: (\n  'a => applicative_t('b),\n  t('a)\n) => applicative_t(t('b))</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.Fold_Map_Plus.fold_map", "title": "NonEmptyF.Traversable.Fold_Map_Plus.fold_map", "contents": "fold_map P t  t P t  ", "rendered": "<h4 class='item'>let fold_map: ('a => P.t('a), t('a)) => P.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable.Fold_Map_Plus", "title": "NonEmptyF.Traversable.Fold_Map_Plus", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable.Fold_Map_Plus", "title": "NonEmptyF.Traversable.Fold_Map_Plus", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Traversable.map", "title": "NonEmptyF.Traversable.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Traversable.applicative_t", "title": "NonEmptyF.Traversable.applicative_t", "contents": "applicative_t A t", "rendered": "<h4 class='item'>type applicative_t('a) = A.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Traversable.t", "title": "NonEmptyF.Traversable.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Traversable", "title": "NonEmptyF.Traversable", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.Fold_Map_Any.fold_map", "title": "NonEmptyF.Foldable.Fold_Map_Any.fold_map", "contents": "fold_map FoldMapAny t  t FoldMapAny t  ", "rendered": "<h4 class='item'>let fold_map: (\n  'a => FoldMapAny.t('a),\n  t('a)\n) => FoldMapAny.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Any", "title": "NonEmptyF.Foldable.Fold_Map_Any", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Any", "title": "NonEmptyF.Foldable.Fold_Map_Any", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.Fold_Map_Plus.fold_map", "title": "NonEmptyF.Foldable.Fold_Map_Plus.fold_map", "contents": "fold_map FoldMapPlus t  t FoldMapPlus t  ", "rendered": "<h4 class='item'>let fold_map: (\n  'a => FoldMapPlus.t('a),\n  t('a)\n) => FoldMapPlus.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Plus", "title": "NonEmptyF.Foldable.Fold_Map_Plus", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map_Plus", "title": "NonEmptyF.Foldable.Fold_Map_Plus", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.Fold_Map.fold_map", "title": "NonEmptyF.Foldable.Fold_Map.fold_map", "contents": "fold_map FoldMapMonoid t  t FoldMapMonoid t  ", "rendered": "<h4 class='item'>let fold_map: (\n  'a => FoldMapMonoid.t,\n  t('a)\n) => FoldMapMonoid.t</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map", "title": "NonEmptyF.Foldable.Fold_Map", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable.Fold_Map", "title": "NonEmptyF.Foldable.Fold_Map", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.fold_right", "title": "NonEmptyF.Foldable.fold_right", "contents": "fold_right   t   ", "rendered": "<h4 class='item'>let fold_right: (('a, 'a) => 'a, 'a, t('a)) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Foldable.fold_left", "title": "NonEmptyF.Foldable.fold_left", "contents": "fold_left   t   ", "rendered": "<h4 class='item'>let fold_left: (('a, 'a) => 'a, 'a, t('a)) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Foldable.t", "title": "NonEmptyF.Foldable.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable", "title": "NonEmptyF.Foldable", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Foldable", "title": "NonEmptyF.Foldable", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.flat_map", "title": "NonEmptyF.Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.pure", "title": "NonEmptyF.Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.apply", "title": "NonEmptyF.Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Monad.map", "title": "NonEmptyF.Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Monad.t", "title": "NonEmptyF.Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Monad", "title": "NonEmptyF.Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Monad", "title": "NonEmptyF.Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Monad", "title": "NonEmptyF.Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Applicative.pure", "title": "NonEmptyF.Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Applicative.apply", "title": "NonEmptyF.Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Applicative.map", "title": "NonEmptyF.Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Applicative.t", "title": "NonEmptyF.Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Applicative", "title": "NonEmptyF.Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Applicative", "title": "NonEmptyF.Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Applicative", "title": "NonEmptyF.Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Apply.apply", "title": "NonEmptyF.Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Apply.map", "title": "NonEmptyF.Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Apply.t", "title": "NonEmptyF.Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Apply", "title": "NonEmptyF.Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Apply", "title": "NonEmptyF.Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Apply", "title": "NonEmptyF.Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.Functor.map", "title": "NonEmptyF.Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.Functor.t", "title": "NonEmptyF.Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Functor", "title": "NonEmptyF.Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.Functor", "title": "NonEmptyF.Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.MagmaAny.append", "title": "NonEmptyF.MagmaAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (t('a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.MagmaAny.t", "title": "NonEmptyF.MagmaAny.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.MagmaAny", "title": "NonEmptyF.MagmaAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.MagmaAny", "title": "NonEmptyF.MagmaAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.SemigroupAny.append", "title": "NonEmptyF.SemigroupAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (t('a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.SemigroupAny.t", "title": "NonEmptyF.SemigroupAny.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.SemigroupAny", "title": "NonEmptyF.SemigroupAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF.SemigroupAny", "title": "NonEmptyF.SemigroupAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.show", "title": "NonEmptyF.show", "contents": "show t string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'h),\n  t('a)\n) => string</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.showF", "title": "NonEmptyF.showF", "contents": "showF string  t string  ", "rendered": "<h4 class='item'>let showF: ('a => string, t('a)) => string</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.eq", "title": "NonEmptyF.eq", "contents": "eq t t bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'g),\n  t('a),\n  t('a)\n) => bool</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.eqF", "title": "NonEmptyF.eqF", "contents": "eqF bool   t t bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, t('a), t('a)) => bool</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.mkString", "title": "NonEmptyF.mkString", "contents": "mkString string t string string  ", "rendered": "<h4 class='item'>let mkString: (string, t(string)) => string</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.flatMap", "title": "NonEmptyF.flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => t('b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.bind", "title": "NonEmptyF.bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.apply", "title": "NonEmptyF.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.map", "title": "NonEmptyF.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.join", "title": "NonEmptyF.join", "contents": "join t t t ", "rendered": "<h4 class='item'>let join: t(t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.flatten", "title": "NonEmptyF.flatten", "contents": "flatten t t t ", "rendered": "<h4 class='item'>let flatten: t(t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.foldRight", "title": "NonEmptyF.foldRight", "contents": "foldRight   t   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, t('a)) => 'b</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.foldLeft", "title": "NonEmptyF.foldLeft", "contents": "foldLeft   t   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, t('a)) => 'b</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.reduceLeft", "title": "NonEmptyF.reduceLeft", "contents": "reduceLeft   t  ", "rendered": "<h4 class='item'>let reduceLeft: (('a, 'a) => 'a, t('a)) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.concat", "title": "NonEmptyF.concat", "contents": "concat t t t  ", "rendered": "<h4 class='item'>let concat: (t('a), t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.tail", "title": "NonEmptyF.tail", "contents": "tail t TailSequence t ", "rendered": "<h4 class='item'>let tail: t('a) => TailSequence.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.head", "title": "NonEmptyF.head", "contents": "head t ", "rendered": "<h4 class='item'>let head: t('a) => 'a</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.cons", "title": "NonEmptyF.cons", "contents": "cons t t  ", "rendered": "<h4 class='item'>let cons: ('a, t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.toSequence", "title": "NonEmptyF.toSequence", "contents": "toSequence t TailSequence t ", "rendered": "<h4 class='item'>let toSequence: t('a) => TailSequence.t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.fromSequence", "title": "NonEmptyF.fromSequence", "contents": "fromSequence TailSequence t option t ", "rendered": "<h4 class='item'>let fromSequence: TailSequence.t('a) => option(t('a))</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.make", "title": "NonEmptyF.make", "contents": "make TailSequence t t  ", "rendered": "<h4 class='item'>let make: ('a, TailSequence.t('a)) => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.pure", "title": "NonEmptyF.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#value-NonEmptyF.length", "title": "NonEmptyF.length", "contents": "length t int ", "rendered": "<h4 class='item'>let length: t('a) => int</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#type-NonEmptyF.t", "title": "NonEmptyF.t", "contents": "t TailSequence t", "rendered": "<h4 class='item'>type t('a) = | NonEmpty('a, TailSequence.t('a))\n</h4>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF", "title": "NonEmptyF", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#module-NonEmptyF", "title": "NonEmptyF", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html", "title": "Relude_NonEmpty", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html", "title": "Relude_NonEmpty", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_NonEmpty.html#Relude_NonEmpty", "title": "Relude_NonEmpty", "contents": "", "rendered": "", "breadcrumb": "Relude_NonEmpty"},
{"href": "./api/Relude_MonadError.html", "title": "Relude_MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadError"},
{"href": "./api/Relude_MonadError.html", "title": "Relude_MonadError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadError"},
{"href": "./api/Relude_MonadError.html#Relude_MonadError", "title": "Relude_MonadError", "contents": "", "rendered": "", "breadcrumb": "Relude_MonadError"},
{"href": "./api/Relude_MonadEff.html#value-MonadEffEff.liftEff", "title": "MonadEffEff.liftEff", "contents": "liftEff ", "rendered": "<h4 class='item'>let liftEff: 'a => 'a</h4>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#type-MonadEffEff.t", "title": "MonadEffEff.t", "contents": "t Eff t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_MonadEff.html#module-Eff\">Eff</a>.<a href=\"./api/Relude_MonadEff.html#type-Eff.t\">t</a>('a)</h4>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#module-MonadEffEff", "title": "MonadEffEff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#module-MonadEffEff", "title": "MonadEffEff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html", "title": "Relude_MonadEff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html", "title": "Relude_MonadEff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadEff.html#Relude_MonadEff", "title": "Relude_MonadEff", "contents": "", "rendered": "", "breadcrumb": "Relude_MonadEff"},
{"href": "./api/Relude_MonadAff.html#value-MonadAffAff.liftAff", "title": "MonadAffAff.liftAff", "contents": "liftAff ", "rendered": "<h4 class='item'>let liftAff: 'a => 'a</h4>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#type-MonadAffAff.t", "title": "MonadAffAff.t", "contents": "t Aff t", "rendered": "<h4 class='item'>type t('a, 'e) = <a href=\"./api/Relude_MonadAff.html#module-Aff\">Aff</a>.<a href=\"./api/Relude_MonadAff.html#type-Aff.t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#module-MonadAffAff", "title": "MonadAffAff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#module-MonadAffAff", "title": "MonadAffAff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html", "title": "Relude_MonadAff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html", "title": "Relude_MonadAff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_MonadAff.html#Relude_MonadAff", "title": "Relude_MonadAff", "contents": "", "rendered": "", "breadcrumb": "Relude_MonadAff"},
{"href": "./api/Relude_ListF.html#value-Validation.traverse", "title": "Validation.traverse", "contents": "traverse Belt Result t  list Relude_Validation t list List t  ", "rendered": "<h4 class='item'>let traverse: (\n  'a => Belt.Result.t('a, 'a),\n  list('a)\n) => <a href=\"./api/Relude_Validation.html\">Relude_Validation</a>.<a href=\"./api/Relude_Validation.html#type-t\">t</a>(list('a), <a href=\"./api/Relude_NonEmpty.html#module-List\" title=\"Relude_NonEmpty.List\">List</a>.<a href=\"./api/Relude_NonEmpty.html#type-List.t\">t</a>('a))</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Validation", "title": "Validation", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Validation", "title": "Validation", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#value-Result.traverse", "title": "Result.traverse", "contents": "traverse Belt Result t  list Belt Result t list  ", "rendered": "<h4 class='item'>let traverse: (\n  'a => Belt.Result.t('a, 'a),\n  list('a)\n) => Belt.Result.t(list('a), 'a)</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Result", "title": "Result", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Result", "title": "Result", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#value-Option.sequence", "title": "Option.sequence", "contents": "sequence list option option list ", "rendered": "<h4 class='item'>let sequence: list(option('a)) => option(list('a))</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#value-Option.traverse", "title": "Option.traverse", "contents": "traverse option  list option list  ", "rendered": "<h4 class='item'>let traverse: ('a => option('a), list('a)) => option(\n  list('a)\n)</h4>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Option", "title": "Option", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#module-Option", "title": "Option", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html", "title": "Relude_ListF", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html", "title": "Relude_ListF", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_ListF.html#Relude_ListF", "title": "Relude_ListF", "contents": "", "rendered": "", "breadcrumb": "Relude_ListF"},
{"href": "./api/Relude_List.html#value-IsoArray.toArray", "title": "IsoArray.toArray", "contents": "toArray list array ", "rendered": "<h4 class='item'>let toArray: list('a) => array('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-IsoArray.fromArray", "title": "IsoArray.fromArray", "contents": "fromArray array list ", "rendered": "<h4 class='item'>let fromArray: array('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-IsoArray.t", "title": "IsoArray.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-IsoArray", "title": "IsoArray", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-IsoArray", "title": "IsoArray", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.showF", "title": "Sequence.showF", "contents": "showF string  list string  ", "rendered": "<h4 class='item'>let showF: ('a => string, list('a)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.eqF", "title": "Sequence.eqF", "contents": "eqF bool   list list bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, list('a), list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.mkString", "title": "Sequence.mkString", "contents": "mkString string list string string  ", "rendered": "<h4 class='item'>let mkString: (string, list(string)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.tailOrEmpty", "title": "Sequence.tailOrEmpty", "contents": "tailOrEmpty list list ", "rendered": "<h4 class='item'>let tailOrEmpty: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.tail", "title": "Sequence.tail", "contents": "tail list option list ", "rendered": "<h4 class='item'>let tail: list('a) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.head", "title": "Sequence.head", "contents": "head list option ", "rendered": "<h4 class='item'>let head: list('a) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.isNotEmpty", "title": "Sequence.isNotEmpty", "contents": "isNotEmpty list bool ", "rendered": "<h4 class='item'>let isNotEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.isEmpty", "title": "Sequence.isEmpty", "contents": "isEmpty list bool ", "rendered": "<h4 class='item'>let isEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Sequence.length", "title": "Sequence.length", "contents": "length list int ", "rendered": "<h4 class='item'>let length: list('a) => int</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-Sequence.t", "title": "Sequence.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Sequence", "title": "Sequence", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Sequence", "title": "Sequence", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.*>", "title": "Infix.*>", "contents": "*> Apply t Apply t Apply t  ", "rendered": "<h4 class='item'>let *>: (<a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a), <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<*", "title": "Infix.<*", "contents": "<* Apply t Apply t Apply t  ", "rendered": "<h4 class='item'>let <*: (<a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a), <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_List.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_List.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> BsAbstract List Alternative t  BsAbstract List Alternative t BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <*>: (\n  BsAbstract.List.Alternative.t('a => 'a),\n  BsAbstract.List.Alternative.t(\n    'a\n  )\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> BsAbstract List Alternative t  BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <#>: (\n  BsAbstract.List.Alternative.t('a),\n  'a => 'a\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  BsAbstract List Alternative t BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <$>: (\n  'a => 'a,\n  BsAbstract.List.Alternative.t(\n    'a\n  )\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<|>", "title": "Infix.<|>", "contents": "<|> BsAbstract List Alternative t BsAbstract List Alternative t BsAbstract List Alternative t  ", "rendered": "<h4 class='item'>let <|>: (\n  BsAbstract.List.Alternative.t('a),\n  BsAbstract.List.Alternative.t(\n    'a\n  )\n) => BsAbstract.List.Alternative.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.<=<", "title": "Infix.<=<", "contents": "<=< BsAbstract List Monad t  BsAbstract List Monad t  BsAbstract List Monad t   ", "rendered": "<h4 class='item'>let <=<: (\n  'a => BsAbstract.List.Monad.t('a),\n  'a => BsAbstract.List.Monad.t('a),\n  'a\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.>=>", "title": "Infix.>=>", "contents": ">=> BsAbstract List Monad t  BsAbstract List Monad t  BsAbstract List Monad t   ", "rendered": "<h4 class='item'>let >=>: (\n  'a => BsAbstract.List.Monad.t('a),\n  'a => BsAbstract.List.Monad.t('a),\n  'a\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.=<<", "title": "Infix.=<<", "contents": "=<< BsAbstract List Monad t  BsAbstract List Monad t BsAbstract List Monad t  ", "rendered": "<h4 class='item'>let =<<: (\n  'a => BsAbstract.List.Monad.t('a),\n  BsAbstract.List.Monad.t('a)\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= BsAbstract List Monad t BsAbstract List Monad t  BsAbstract List Monad t  ", "rendered": "<h4 class='item'>let >>=: (\n  BsAbstract.List.Monad.t('a),\n  'a => BsAbstract.List.Monad.t(\n    'a\n  )\n) => BsAbstract.List.Monad.t('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map5", "title": "map5", "contents": "map5      list list list list list list      ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  list('a),\n  list('b),\n  list('c),\n  list('d),\n  list('e)\n) => list('f)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map4", "title": "map4", "contents": "map4     list list list list list     ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  list('a),\n  list('b),\n  list('c),\n  list('d)\n) => list('e)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map3", "title": "map3", "contents": "map3    list list list list    ", "rendered": "<h4 class='item'>let map3: (\n  ('a, 'b, 'c) => 'd,\n  list('a),\n  list('b),\n  list('c)\n) => list('d)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map2", "title": "map2", "contents": "map2   list list list   ", "rendered": "<h4 class='item'>let map2: (('a, 'b) => 'c, list('a), list('b)) => list('c)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-flap", "title": "flap", "contents": "flap list  list  ", "rendered": "<h4 class='item'>let flap: (list('a => 'b), 'a) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-void", "title": "void", "contents": "void list list unit ", "rendered": "<h4 class='item'>let void: list('a) => list(unit)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-MonoidAny.empty", "title": "MonoidAny.empty", "contents": "empty list", "rendered": "<h4 class='item'>let empty: list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-MonoidAny.append", "title": "MonoidAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (<a href=\"./api/Relude_List.html#type-MonoidAny.t\">t</a>('a), <a href=\"./api/Relude_List.html#type-MonoidAny.t\">t</a>('a)) => <a href=\"./api/Relude_List.html#type-MonoidAny.t\">t</a>('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-MonoidAny.t", "title": "MonoidAny.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-MonoidAny", "title": "MonoidAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-SemigroupAny.append", "title": "SemigroupAny.append", "contents": "append list list list  ", "rendered": "<h4 class='item'>let append: (list('a), list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#type-SemigroupAny.t", "title": "SemigroupAny.t", "contents": "t list", "rendered": "<h4 class='item'>type t('a) = list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-show", "title": "show", "contents": "show list string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'f),\n  list('a)\n) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-showF", "title": "showF", "contents": "showF string  list string  ", "rendered": "<h4 class='item'>let showF: ('a => string, list('a)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-eq", "title": "eq", "contents": "eq list list bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'e),\n  list('a),\n  list('a)\n) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-eqF", "title": "eqF", "contents": "eqF bool   list list bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, list('a), list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-mkString", "title": "mkString", "contents": "mkString string list string string  ", "rendered": "<h4 class='item'>let mkString: (string, list(string)) => string</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-toArray", "title": "toArray", "contents": "toArray list array ", "rendered": "<h4 class='item'>let toArray: list('a) => array('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-fromArray", "title": "fromArray", "contents": "fromArray array list ", "rendered": "<h4 class='item'>let fromArray: array('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-flatten", "title": "flatten", "contents": "flatten list list list ", "rendered": "<h4 class='item'>let flatten: list(list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-flatMap", "title": "flatMap", "contents": "flatMap list  list list  ", "rendered": "<h4 class='item'>let flatMap: ('a => list('b), list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-bind", "title": "bind", "contents": "bind list list  list  ", "rendered": "<h4 class='item'>let bind: (list('a), 'a => list('b)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-apply", "title": "apply", "contents": "apply list  list list  ", "rendered": "<h4 class='item'>let apply: (list('a => 'b), list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-forEachWithIndex", "title": "forEachWithIndex", "contents": "forEachWithIndex int int unit   list int unit  ", "rendered": "<h4 class='item'>let forEachWithIndex: (\n  (int, int) => unit,\n  list(int)\n) => unit</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-forEach", "title": "forEach", "contents": "forEach unit  list unit  ", "rendered": "<h4 class='item'>let forEach: ('a => unit, list('a)) => unit</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-mapWithIndex", "title": "mapWithIndex", "contents": "mapWithIndex int int   list int list  ", "rendered": "<h4 class='item'>let mapWithIndex: ((int, int) => 'b, list(int)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-map", "title": "map", "contents": "map  list list  ", "rendered": "<h4 class='item'>let map: ('a => 'b, list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-distinct", "title": "distinct", "contents": "distinct bool   list list  ", "rendered": "<h4 class='item'>let distinct: (('a, 'a) => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-all", "title": "all", "contents": "all bool  list bool  ", "rendered": "<h4 class='item'>let all: ('a => bool, list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-indexOf", "title": "indexOf", "contents": "indexOf bool   list option int   ", "rendered": "<h4 class='item'>let indexOf: (('a, 'a) => bool, 'a, list('a)) => option(int)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-contains", "title": "contains", "contents": "contains bool   list bool   ", "rendered": "<h4 class='item'>let contains: (('a, 'a) => bool, 'a, list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-any", "title": "any", "contents": "any bool  list bool  ", "rendered": "<h4 class='item'>let any: ('a => bool, list('a)) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-reverse", "title": "reverse", "contents": "reverse list list ", "rendered": "<h4 class='item'>let reverse: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-shuffle", "title": "shuffle", "contents": "shuffle list list ", "rendered": "<h4 class='item'>let shuffle: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-sort", "title": "sort", "contents": "sort BsAbstract Interface ordering   list list  ", "rendered": "<h4 class='item'>let sort: (\n  ('a, 'a) => BsAbstract.Interface.ordering,\n  list('a)\n) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-sortWithInt", "title": "sortWithInt", "contents": "sortWithInt int   list list  ", "rendered": "<h4 class='item'>let sortWithInt: (('a, 'a) => int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-unzip", "title": "unzip", "contents": "unzip list list list ", "rendered": "<h4 class='item'>let unzip: list(('a, 'b)) => (list('a), list('b))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-zipWithIndex", "title": "zipWithIndex", "contents": "zipWithIndex list list int ", "rendered": "<h4 class='item'>let zipWithIndex: list('a) => list(('a, int))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-zipWith", "title": "zipWith", "contents": "zipWith   list list list   ", "rendered": "<h4 class='item'>let zipWith: (('a, 'b) => 'c, list('a), list('b)) => list(\n  'c\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-zip", "title": "zip", "contents": "zip list list list  ", "rendered": "<h4 class='item'>let zip: (list('a), list('b)) => list(('a, 'b))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-replicate", "title": "replicate", "contents": "replicate int list list  ", "rendered": "<h4 class='item'>let replicate: (int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-intersperse", "title": "intersperse", "contents": "intersperse list list  ", "rendered": "<h4 class='item'>let intersperse: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-prependToAll", "title": "prependToAll", "contents": "prependToAll list list  ", "rendered": "<h4 class='item'>let prependToAll: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-splitAt", "title": "splitAt", "contents": "splitAt int list option list list  ", "rendered": "<h4 class='item'>let splitAt: (int, list('a)) => option((list('a), list('a)))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-partition", "title": "partition", "contents": "partition bool  list list list  ", "rendered": "<h4 class='item'>let partition: ('a => bool, list('a)) => (\n  list('a),\n  list('a)\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-findWithIndex", "title": "findWithIndex", "contents": "findWithIndex int bool   list option  ", "rendered": "<h4 class='item'>let findWithIndex: (('a, int) => bool, list('a)) => option(\n  'a\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-find", "title": "find", "contents": "find bool  list option  ", "rendered": "<h4 class='item'>let find: ('a => bool, list('a)) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-filterWithIndex", "title": "filterWithIndex", "contents": "filterWithIndex int bool   list list  ", "rendered": "<h4 class='item'>let filterWithIndex: (('a, int) => bool, list('a)) => list(\n  'a\n)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-filter", "title": "filter", "contents": "filter bool  list list  ", "rendered": "<h4 class='item'>let filter: ('a => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-dropWhile", "title": "dropWhile", "contents": "dropWhile bool  list list  ", "rendered": "<h4 class='item'>let dropWhile: ('a => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-dropUpTo", "title": "dropUpTo", "contents": "dropUpTo int list list  ", "rendered": "<h4 class='item'>let dropUpTo: (int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-drop", "title": "drop", "contents": "drop int list option list  ", "rendered": "<h4 class='item'>let drop: (int, list('a)) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-takeWhile", "title": "takeWhile", "contents": "takeWhile bool  list list  ", "rendered": "<h4 class='item'>let takeWhile: ('a => bool, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-takeUpTo", "title": "takeUpTo", "contents": "takeUpTo int list list  ", "rendered": "<h4 class='item'>let takeUpTo: (int, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-take", "title": "take", "contents": "take int list option list  ", "rendered": "<h4 class='item'>let take: (int, list('a)) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-last", "title": "last", "contents": "last list option ", "rendered": "<h4 class='item'>let last: list('a) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-init", "title": "init", "contents": "init list option list ", "rendered": "<h4 class='item'>let init: list('a) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-tailOrEmpty", "title": "tailOrEmpty", "contents": "tailOrEmpty list list ", "rendered": "<h4 class='item'>let tailOrEmpty: list('a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-tail", "title": "tail", "contents": "tail list option list ", "rendered": "<h4 class='item'>let tail: list('a) => option(list('a))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-head", "title": "head", "contents": "head list option ", "rendered": "<h4 class='item'>let head: list('a) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-get", "title": "get", "contents": "get int list option  ", "rendered": "<h4 class='item'>let get: (int, list('a)) => option('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-scanRight", "title": "scanRight", "contents": "scanRight   list list   ", "rendered": "<h4 class='item'>let scanRight: (('a, 'b) => 'b, 'b, list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-scanLeft", "title": "scanLeft", "contents": "scanLeft   list list   ", "rendered": "<h4 class='item'>let scanLeft: (('b, 'a) => 'b, 'b, list('a)) => list('b)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-foldRight", "title": "foldRight", "contents": "foldRight   list   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, list('a)) => 'b</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft   list   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, list('a)) => 'b</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-append", "title": "append", "contents": "append list list  ", "rendered": "<h4 class='item'>let append: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-prepend", "title": "prepend", "contents": "prepend list list  ", "rendered": "<h4 class='item'>let prepend: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-uncons", "title": "uncons", "contents": "uncons list option list ", "rendered": "<h4 class='item'>let uncons: list('a) => option(('a, list('a)))</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-cons", "title": "cons", "contents": "cons list list  ", "rendered": "<h4 class='item'>let cons: ('a, list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-concat", "title": "concat", "contents": "concat list list list  ", "rendered": "<h4 class='item'>let concat: (list('a), list('a)) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-makeWithIndex", "title": "makeWithIndex", "contents": "makeWithIndex int int  list  ", "rendered": "<h4 class='item'>let makeWithIndex: (int, int => 'a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-repeat", "title": "repeat", "contents": "repeat int list  ", "rendered": "<h4 class='item'>let repeat: (int, 'a) => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-one", "title": "one", "contents": "one list ", "rendered": "<h4 class='item'>let one: 'a => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-pure", "title": "pure", "contents": "pure list ", "rendered": "<h4 class='item'>let pure: 'a => list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-empty", "title": "empty", "contents": "empty list", "rendered": "<h4 class='item'>let empty: list('a)</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-isNotEmpty", "title": "isNotEmpty", "contents": "isNotEmpty list bool ", "rendered": "<h4 class='item'>let isNotEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-isEmpty", "title": "isEmpty", "contents": "isEmpty list bool ", "rendered": "<h4 class='item'>let isEmpty: list('a) => bool</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#value-length", "title": "length", "contents": "length list int ", "rendered": "<h4 class='item'>let length: list('a) => int</h4>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html", "title": "Relude_List", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html", "title": "Relude_List", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_List.html#Relude_List", "title": "Relude_List", "contents": "", "rendered": "", "breadcrumb": "Relude_List"},
{"href": "./api/Relude_JsPromise.html#value-fromAff", "title": "fromAff", "contents": "fromAff Relude_Aff t exn Js Promise t ", "rendered": "<h4 class='item'>let fromAff: <a href=\"./api/Relude_Aff.html\">Relude_Aff</a>.<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, exn) => Js.Promise.t('a)</h4>", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html#value-toAff", "title": "toAff", "contents": "toAff Js Promise t Relude_Aff t Js Promise error ", "rendered": "<h4 class='item'>let toAff: Js.Promise.t('a) => <a href=\"./api/Relude_Aff.html\">Relude_Aff</a>.<a href=\"./api/Relude_Aff.html#type-t\">t</a>(\n  'a,\n  Js.Promise.error\n)</h4>", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html", "title": "Relude_JsPromise", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html", "title": "Relude_JsPromise", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsPromise.html#Relude_JsPromise", "title": "Relude_JsPromise", "contents": "", "rendered": "", "breadcrumb": "Relude_JsPromise"},
{"href": "./api/Relude_JsExn.html#value-fromExn", "title": "fromExn", "contents": "fromExn exn Js Exn t ", "rendered": "<h4 class='item'>let fromExn: exn => Js.Exn.t</h4>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html#value-throw", "title": "throw", "contents": "throw string unit ", "rendered": "<h4 class='item'>let throw: string => unit</h4>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html#value-make", "title": "make", "contents": "make string Js Exn t ", "rendered": "<h4 class='item'>let make: string => Js.Exn.t</h4>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html", "title": "Relude_JsExn", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html", "title": "Relude_JsExn", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsExn.html#Relude_JsExn", "title": "Relude_JsExn", "contents": "", "rendered": "", "breadcrumb": "Relude_JsExn"},
{"href": "./api/Relude_JsConsole.html#value-IO.warn", "title": "IO.warn", "contents": "warn string IO t unit ", "rendered": "<h4 class='item'>let warn: string => <a href=\"./api/Relude_JsConsole.html#module-IO.IO\">IO</a>.<a href=\"./api/Relude_JsConsole.html#type-IO.IO.t\">t</a>(unit, 'e)</h4>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#value-IO.log", "title": "IO.log", "contents": "log string IO t unit ", "rendered": "<h4 class='item'>let log: string => <a href=\"./api/Relude_JsConsole.html#module-IO.IO\">IO</a>.<a href=\"./api/Relude_JsConsole.html#type-IO.IO.t\">t</a>(unit, 'e)</h4>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#module-IO", "title": "IO", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#module-IO", "title": "IO", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html", "title": "Relude_JsConsole", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html", "title": "Relude_JsConsole", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_JsConsole.html#Relude_JsConsole", "title": "Relude_JsConsole", "contents": "", "rendered": "", "breadcrumb": "Relude_JsConsole"},
{"href": "./api/Relude_Js.html", "title": "Relude_Js", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Js"},
{"href": "./api/Relude_Js.html", "title": "Relude_Js", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Js"},
{"href": "./api/Relude_Js.html#Relude_Js", "title": "Relude_Js", "contents": "", "rendered": "", "breadcrumb": "Relude_Js"},
{"href": "./api/Relude_IsoList.html", "title": "Relude_IsoList", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IsoList"},
{"href": "./api/Relude_IsoList.html", "title": "Relude_IsoList", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IsoList"},
{"href": "./api/Relude_IsoList.html#Relude_IsoList", "title": "Relude_IsoList", "contents": "", "rendered": "", "breadcrumb": "Relude_IsoList"},
{"href": "./api/Relude_IsoArray.html", "title": "Relude_IsoArray", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IsoArray"},
{"href": "./api/Relude_IsoArray.html", "title": "Relude_IsoArray", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IsoArray"},
{"href": "./api/Relude_IsoArray.html#Relude_IsoArray", "title": "Relude_IsoArray", "contents": "", "rendered": "", "breadcrumb": "Relude_IsoArray"},
{"href": "./api/Relude_Int.html#value-compareAsInt", "title": "compareAsInt", "contents": "compareAsInt int int int  ", "rendered": "<h4 class='item'>let compareAsInt: (int, int) => int</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-compare", "title": "compare", "contents": "compare int int ordering  ", "rendered": "<h4 class='item'>let compare: (int, int) => <a href=\"./api/Relude_Int.html#type-ordering\">ordering</a></h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-eq", "title": "eq", "contents": "eq int int bool  ", "rendered": "<h4 class='item'>let eq: (int, int) => bool</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-rangeAsArray", "title": "rangeAsArray", "contents": "rangeAsArray int int array int  ", "rendered": "<h4 class='item'>let rangeAsArray: (int, int) => array(int)</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#value-rangeAsList", "title": "rangeAsList", "contents": "rangeAsList int int list int  ", "rendered": "<h4 class='item'>let rangeAsList: (int, int) => list(int)</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#type-ordering", "title": "ordering", "contents": "ordering BsAbstract Interface ordering", "rendered": "<h4 class='item'>type ordering = BsAbstract.Interface.ordering</h4>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html", "title": "Relude_Int", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html", "title": "Relude_Int", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Int.html#Relude_Int", "title": "Relude_Int", "contents": "", "rendered": "", "breadcrumb": "Relude_Int"},
{"href": "./api/Relude_Identity.html#value-Show.show", "title": "Show.show", "contents": "show t string ", "rendered": "<h4 class='item'>let show: t => string</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Show.t", "title": "Show.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t = <a href=\"./api/Relude_Identity.html#type-t\">t</a>(E.t)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Show", "title": "Show", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Show", "title": "Show", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Eq.eq", "title": "Eq.eq", "contents": "eq t t bool  ", "rendered": "<h4 class='item'>let eq: (t, t) => bool</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Eq.t", "title": "Eq.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t = <a href=\"./api/Relude_Identity.html#type-t\">t</a>(E.t)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Eq", "title": "Eq", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Eq", "title": "Eq", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a => 'b), <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Monad.t", "title": "Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('a => 'b), <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a => 'a), <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-Apply.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Apply.t", "title": "Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-Functor.t", "title": "Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-showF", "title": "showF", "contents": "showF t string  t t string  ", "rendered": "<h4 class='item'>let showF: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a) => string, <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))) => string</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-show", "title": "show", "contents": "show t string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'd),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)\n) => string</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-eqF", "title": "eqF", "contents": "eqF t t t t bool   t t t t t t bool   ", "rendered": "<h4 class='item'>let eqF: (\n  (<a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)), <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))) => bool,\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)))\n) => bool</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-eq", "title": "eq", "contents": "eq t t bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'c),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a),\n  <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)\n) => bool</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-flatMap", "title": "flatMap", "contents": "flatMap t t t  t t t t  ", "rendered": "<h4 class='item'>let flatMap: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)), <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>(<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a))</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Identity.html#type-t\">t</a>('a => 'b), <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-unwrap", "title": "unwrap", "contents": "unwrap t ", "rendered": "<h4 class='item'>let unwrap: <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a) => 'a</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Identity.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a) = 'a</h4>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html", "title": "Relude_Identity", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html", "title": "Relude_Identity", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_Identity.html#Relude_Identity", "title": "Relude_Identity", "contents": "", "rendered": "", "breadcrumb": "Relude_Identity"},
{"href": "./api/Relude_IO.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.catchError", "title": "MonadError.catchError", "contents": "catchError t  t t  ", "rendered": "<h4 class='item'>let catchError: ('a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a), <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.throwError", "title": "MonadError.throwError", "contents": "throwError t ", "rendered": "<h4 class='item'>let throwError: 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.flat_map", "title": "MonadError.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.pure", "title": "MonadError.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.apply", "title": "MonadError.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadError.map", "title": "MonadError.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-MonadError.t", "title": "MonadError.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadError", "title": "MonadError", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadError", "title": "MonadError", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.throwError", "title": "MonadThrow.throwError", "contents": "throwError t ", "rendered": "<h4 class='item'>let throwError: 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.flat_map", "title": "MonadThrow.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (t('a), 'a => t('b)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.pure", "title": "MonadThrow.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.apply", "title": "MonadThrow.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-MonadThrow.map", "title": "MonadThrow.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-MonadThrow.t", "title": "MonadThrow.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadThrow", "title": "MonadThrow", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-MonadThrow", "title": "MonadThrow", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Monad.t", "title": "Monad.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_IO.html#type-t\">t</a>('a => 'a, 'a), <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Apply.t", "title": "Apply.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Bifunctor.bimap", "title": "Bifunctor.bimap", "contents": "bimap   t t   ", "rendered": "<h4 class='item'>let bimap: ('a => 'a, 'a => 'a, <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Bifunctor.t", "title": "Bifunctor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a, 'e) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Bifunctor", "title": "Bifunctor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Bifunctor", "title": "Bifunctor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-Functor.t", "title": "Functor.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-withDelay", "title": "withDelay", "contents": "withDelay ", "rendered": "<h4 class='item'>let withDelay: 'a0 'e. int -&gt; ('a0, 'e) t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-delayWithVoid", "title": "delayWithVoid", "contents": "delayWithVoid int t unit Void t ", "rendered": "<h4 class='item'>let delayWithVoid: int => <a href=\"./api/Relude_IO.html#type-t\">t</a>(unit, <a href=\"./api/Relude_IO.html#module-Void\">Void</a>.<a href=\"./api/Relude_IO.html#type-Void.t\">t</a>)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-delay", "title": "delay", "contents": "delay ", "rendered": "<h4 class='item'>let delay: 'e. int -&gt; (unit, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unsafeRunAsync", "title": "unsafeRunAsync", "contents": "unsafeRunAsync ", "rendered": "<h4 class='item'>let unsafeRunAsync: 'a0 'e. (('a0, 'e) Result.t -&gt; unit) -&gt; ('a0, 'e) t -&gt; unit</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unsummonError", "title": "unsummonError", "contents": "unsummonError ", "rendered": "<h4 class='item'>let unsummonError: 'a0 'e. (('a0, 'e) Result.t, Void.t) t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-summonError", "title": "summonError", "contents": "summonError ", "rendered": "<h4 class='item'>let summonError: 'a0 'e. ('a0, 'e) t -&gt; (('a0, 'e) Result.t, Void.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-triesJS", "title": "triesJS", "contents": "triesJS ", "rendered": "<h4 class='item'>let triesJS: 'a0. (unit -&gt; 'a0) -&gt; ('a0, Js.Exn.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-tries", "title": "tries", "contents": "tries ", "rendered": "<h4 class='item'>let tries: 'a0. (unit -&gt; 'a0) -&gt; ('a0, exn) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-catchError", "title": "catchError", "contents": "catchError ", "rendered": "<h4 class='item'>let catchError: 'a0 'e. ('e -&gt; ('a0, 'e) t) -&gt; ('a0, 'e) t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-bitap", "title": "bitap", "contents": "bitap ", "rendered": "<h4 class='item'>let bitap: 'a0 'e. ('a0 -&gt; unit) -&gt; ('e -&gt; unit) -&gt; ('a0, 'e) t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-bimap", "title": "bimap", "contents": "bimap ", "rendered": "<h4 class='item'>let bimap: 'a0 'b0 'e1 'e2. ('a0 -&gt; 'b0) -&gt; ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) t -&gt; ('b0, 'e2) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-tapError", "title": "tapError", "contents": "tapError ", "rendered": "<h4 class='item'>let tapError: 'a0 'e. ('e -&gt; unit) -&gt; ('a0, 'e) t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-mapError", "title": "mapError", "contents": "mapError ", "rendered": "<h4 class='item'>let mapError: 'a0 'e1 'e2. ('e1 -&gt; 'e2) -&gt; ('a0, 'e1) t -&gt; ('a0, 'e2) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-apply", "title": "apply", "contents": "apply ", "rendered": "<h4 class='item'>let apply: 'a0 'b0 'e. ('a0 -&gt; 'b0, 'e) t -&gt; ('a0, 'e) t -&gt; ('b0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-bind", "title": "bind", "contents": "bind ", "rendered": "<h4 class='item'>let bind: 'a0 'b0 'e. ('a0, 'e) t -&gt; ('a0 -&gt; ('b0, 'e) t) -&gt; ('b0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-flatMap", "title": "flatMap", "contents": "flatMap ", "rendered": "<h4 class='item'>let flatMap: 'a0 'b0 'e. ('a0 -&gt; ('b0, 'e) t) -&gt; ('a0, 'e) t -&gt; ('b0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-tap", "title": "tap", "contents": "tap ", "rendered": "<h4 class='item'>let tap: 'a0 'e. ('a0 -&gt; unit) -&gt; ('a0, 'e) t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-map", "title": "map", "contents": "map ", "rendered": "<h4 class='item'>let map: 'a0 'b0 'e. ('a0 -&gt; 'b0) -&gt; ('a0, 'e) t -&gt; ('b0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-fromResult", "title": "fromResult", "contents": "fromResult ", "rendered": "<h4 class='item'>let fromResult: 'a0 'e. ('a0, 'e) Result.t -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-fromOption", "title": "fromOption", "contents": "fromOption ", "rendered": "<h4 class='item'>let fromOption: 'a0 'e. (unit -&gt; 'e) -&gt; 'a0 option -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-async", "title": "async", "contents": "async ", "rendered": "<h4 class='item'>let async: 'a0 'e. ((('a0, 'e) Result.t -&gt; unit) -&gt; unit) -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspendIO", "title": "suspendIO", "contents": "suspendIO ", "rendered": "<h4 class='item'>let suspendIO: 'a0 'e. (unit -&gt; ('a0, 'e) t) -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspendThrow", "title": "suspendThrow", "contents": "suspendThrow ", "rendered": "<h4 class='item'>let suspendThrow: 'a0 'e. (unit -&gt; 'e) -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspendWithVoid", "title": "suspendWithVoid", "contents": "suspendWithVoid ", "rendered": "<h4 class='item'>let suspendWithVoid: 'a0. (unit -&gt; 'a0) -&gt; ('a0, Void.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-suspend", "title": "suspend", "contents": "suspend ", "rendered": "<h4 class='item'>let suspend: 'a0 'e. (unit -&gt; 'a0) -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-throwWithVoid", "title": "throwWithVoid", "contents": "throwWithVoid ", "rendered": "<h4 class='item'>let throwWithVoid: 'e. 'e -&gt; (Void.t, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-throw", "title": "throw", "contents": "throw ", "rendered": "<h4 class='item'>let throw: 'a0 'e. 'e -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unitWithVoid", "title": "unitWithVoid", "contents": "unitWithVoid t unit Void t", "rendered": "<h4 class='item'>let unitWithVoid: <a href=\"./api/Relude_IO.html#type-t\">t</a>(unit, <a href=\"./api/Relude_IO.html#module-Void\">Void</a>.<a href=\"./api/Relude_IO.html#type-Void.t\">t</a>)</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-unit", "title": "unit", "contents": "unit ", "rendered": "<h4 class='item'>let unit: 'e. (unit, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-pureWithVoid", "title": "pureWithVoid", "contents": "pureWithVoid ", "rendered": "<h4 class='item'>let pureWithVoid: 'a0. 'a0 -&gt; ('a0, Void.t) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-pure", "title": "pure", "contents": "pure ", "rendered": "<h4 class='item'>let pure: 'a0 'e. 'a0 -&gt; ('a0, 'e) t</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#type-t", "title": "t", "contents": "t t t unit  t unit t  t Result t unit  unit  t  t t t  t t", "rendered": "<h4 class='item'>type t('a, 'e) = \n  | Pure('a): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Throw('e): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Suspend(unit => 'a): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | SuspendIO(unit => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Async(<a href=\"./api/Relude_IO.html#module-Result\">Result</a>.<a href=\"./api/Relude_IO.html#type-Result.t\">t</a>('a, 'e) => unit => unit): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | Map('r => 'a, <a href=\"./api/Relude_IO.html#type-t\">t</a>('r, 'e)): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n  | FlatMap('r => <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e), <a href=\"./api/Relude_IO.html#type-t\">t</a>('r, 'e)): <a href=\"./api/Relude_IO.html#type-t\">t</a>('a, 'e)\n</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value->>", "title": ">>", "contents": ">>     ", "rendered": "<h4 class='item'>let >>: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#value-<<", "title": "<<", "contents": "<<     ", "rendered": "<h4 class='item'>let <<: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html", "title": "Relude_IO", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html", "title": "Relude_IO", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_IO.html#Relude_IO", "title": "Relude_IO", "contents": "", "rendered": "", "breadcrumb": "Relude_IO"},
{"href": "./api/Relude_Function.html#value-Infix.>>", "title": "Infix.>>", "contents": ">>     ", "rendered": "<h4 class='item'>let >>: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-Infix.<<", "title": "Infix.<<", "contents": "<<     ", "rendered": "<h4 class='item'>let <<: ('a => 'a, 'a => 'a, 'a) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-flatMap", "title": "flatMap", "contents": "flatMap      ", "rendered": "<h4 class='item'>let flatMap: (('a, 'r) => 'b, 'r => 'a, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-bind", "title": "bind", "contents": "bind      ", "rendered": "<h4 class='item'>let bind: ('r => 'a, ('a, 'r) => 'b, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-apply", "title": "apply", "contents": "apply      ", "rendered": "<h4 class='item'>let apply: (('r, 'a) => 'b, 'r => 'a, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-map", "title": "map", "contents": "map     ", "rendered": "<h4 class='item'>let map: ('a => 'b, 'r => 'a, 'r) => 'b</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-pure", "title": "pure", "contents": "pure  ", "rendered": "<h4 class='item'>let pure: ('a, 'r) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-andThen", "title": "andThen", "contents": "andThen     ", "rendered": "<h4 class='item'>let andThen: ('a => 'b, 'b => 'c, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-flipCompose", "title": "flipCompose", "contents": "flipCompose     ", "rendered": "<h4 class='item'>let flipCompose: ('a => 'b, 'b => 'c, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-compose", "title": "compose", "contents": "compose     ", "rendered": "<h4 class='item'>let compose: ('b => 'c, 'a => 'b, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-flip", "title": "flip", "contents": "flip     ", "rendered": "<h4 class='item'>let flip: (('a, 'b) => 'c, 'b, 'a) => 'c</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-const", "title": "const", "contents": "const  ", "rendered": "<h4 class='item'>let const: ('a, 'b) => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-id", "title": "id", "contents": "id ", "rendered": "<h4 class='item'>let id: 'a => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#value-identity", "title": "identity", "contents": "identity ", "rendered": "<h4 class='item'>let identity: 'a => 'a</h4>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html", "title": "Relude_Function", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html", "title": "Relude_Function", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Function.html#Relude_Function", "title": "Relude_Function", "contents": "", "rendered": "", "breadcrumb": "Relude_Function"},
{"href": "./api/Relude_Float.html#value-approximatelyEqual", "title": "approximatelyEqual", "contents": "approximatelyEqual float float float bool tolerance  ", "rendered": "<h4 class='item'>let approximatelyEqual: (\n  ~tolerance: float,\n  float,\n  float\n) => bool</h4>", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Float.html", "title": "Relude_Float", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Float.html", "title": "Relude_Float", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Float.html#Relude_Float", "title": "Relude_Float", "contents": "", "rendered": "", "breadcrumb": "Relude_Float"},
{"href": "./api/Relude_Eff.html#value-Infix.<=<", "title": "Infix.<=<", "contents": "<=< Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let <=<: (\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.>=>", "title": "Infix.>=>", "contents": ">=> Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let >=>: (\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.=<<", "title": "Infix.=<<", "contents": "=<< Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let =<<: ('a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a), <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= Monad t Monad t  Monad t  ", "rendered": "<h4 class='item'>let >>=: (<a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a), 'a => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let <*>: (<a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a => 'a), <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Monad t  Monad t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Monad t Monad t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a => 'b), <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Monad.t", "title": "Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('a => 'b), <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a => 'a), <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-Apply.t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Apply.t", "title": "Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-Functor.t", "title": "Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b), <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a => 'b), <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-attemptJS", "title": "attemptJS", "contents": "attemptJS t t Belt Result t Js Exn t ", "rendered": "<h4 class='item'>let attemptJS: <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>(Belt.Result.t('a, Js.Exn.t))</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-attempt", "title": "attempt", "contents": "Attempts to run an Eff.t(&#39;a) and catches any exn thrown by the effect and lifts it into Eff.t(Belt.Result.t(&#39;a, exn))", "rendered": "Attempts to run an Eff.t(&#39;a) and catches any exn thrown by the effect and lifts it into Eff.t(Belt.Result.t(&#39;a, exn))", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-attempt", "title": "attempt", "contents": "attempt t t Belt Result t exn ", "rendered": "<h4 class='item'>let attempt: <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Eff.html#type-t\">t</a>(Belt.Result.t('a, exn))</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-fromThunk", "title": "fromThunk", "contents": "fromThunk unit  t ", "rendered": "<h4 class='item'>let fromThunk: unit => 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-run", "title": "run", "contents": "Unsafely runs the effect or chain of effects. For Eff, this is the same as\njust calling the effect as a function.", "rendered": "Unsafely runs the effect or chain of effects. For Eff, this is the same as\njust calling the effect as a function.", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#value-run", "title": "run", "contents": "run t ", "rendered": "<h4 class='item'>let run: <a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => 'a</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-t", "title": "t", "contents": "This is inspired by bs-effects Effect, purescript Eff and Effect, and John\nDe Goes&#39; basic synchronous IO monad described here:\nhttp://degoes.net/articles/only-one-io", "rendered": "This is inspired by bs-effects <code>Effect</code>, purescript Eff and Effect, and John\nDe Goes&#39; basic synchronous IO monad described here:\nhttp://degoes.net/articles/only-one-io", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-t", "title": "t", "contents": "Eff is a synchronous effect monad.", "rendered": "Eff is a synchronous effect monad.", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#type-t", "title": "t", "contents": "t unit ", "rendered": "<h4 class='item'>type t('a) = unit => 'a</h4>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html", "title": "Relude_Eff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html", "title": "Relude_Eff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Eff.html#Relude_Eff", "title": "Relude_Eff", "contents": "", "rendered": "", "breadcrumb": "Relude_Eff"},
{"href": "./api/Relude_Bool.html#value-ifElse", "title": "ifElse", "contents": "ifElse unit  unit  bool   ", "rendered": "<h4 class='item'>let ifElse: (unit => 'a, unit => 'a, bool) => 'a</h4>", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_Bool.html", "title": "Relude_Bool", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_Bool.html", "title": "Relude_Bool", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_Bool.html#Relude_Bool", "title": "Relude_Bool", "contents": "", "rendered": "", "breadcrumb": "Relude_Bool"},
{"href": "./api/Relude_AsyncResult.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Monad.t", "title": "Monad.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a => 'a, 'a), <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Apply.t", "title": "Apply.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-Functor.t", "title": "Functor.t", "contents": "t t E t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, E.t)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e), <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a => 'b, 'e), <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-mapError", "title": "mapError", "contents": "mapError  t t  ", "rendered": "<h4 class='item'>let mapError: ('e1 => 'e2, <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e1)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e2)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-completeError", "title": "completeError", "contents": "completeError t ", "rendered": "<h4 class='item'>let completeError: 'e => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-completeOk", "title": "completeOk", "contents": "completeOk t ", "rendered": "<h4 class='item'>let completeOk: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-reloadingError", "title": "reloadingError", "contents": "reloadingError t ", "rendered": "<h4 class='item'>let reloadingError: 'e => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-reloadingOk", "title": "reloadingOk", "contents": "reloadingOk t ", "rendered": "<h4 class='item'>let reloadingOk: 'a => <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-loading", "title": "loading", "contents": "loading t", "rendered": "<h4 class='item'>let loading: <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#value-init", "title": "init", "contents": "init t", "rendered": "<h4 class='item'>let init: <a href=\"./api/Relude_AsyncResult.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#type-t", "title": "t", "contents": "t Relude_AsyncData t Belt Result t", "rendered": "<h4 class='item'>type t('a, 'e) = <a href=\"./api/Relude_AsyncData.html\">Relude_AsyncData</a>.<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>(Belt.Result.t('a, 'e))</h4>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html", "title": "Relude_AsyncResult", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html", "title": "Relude_AsyncResult", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncResult.html#Relude_AsyncResult", "title": "Relude_AsyncResult", "contents": "", "rendered": "", "breadcrumb": "Relude_AsyncResult"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<=<", "title": "Infix.<=<", "contents": "<=< Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let <=<: (\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.>=>", "title": "Infix.>=>", "contents": ">=> Monad t  Monad t  Monad t   ", "rendered": "<h4 class='item'>let >=>: (\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a),\n  'a\n) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.=<<", "title": "Infix.=<<", "contents": "=<< Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let =<<: ('a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.>>=", "title": "Infix.>>=", "contents": ">>= Monad t Monad t  Monad t  ", "rendered": "<h4 class='item'>let >>=: (<a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a), 'a => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> Monad t  Monad t Monad t  ", "rendered": "<h4 class='item'>let <*>: (<a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a => 'a), <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Monad t  Monad t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Monad t Monad t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Monad\">Monad</a>.<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<*>", "title": "Infix.<*>", "contents": "<*> Apply t  Apply t Apply t  ", "rendered": "<h4 class='item'>let <*>: (<a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a => 'a), <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Apply t  Apply t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Apply t Apply t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Apply\">Apply</a>.<a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<#>", "title": "Infix.<#>", "contents": "<#> Functor t  Functor t  ", "rendered": "<h4 class='item'>let <#>: (<a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a), 'a => 'a) => <a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Infix.<$>", "title": "Infix.<$>", "contents": "<$>  Functor t Functor t  ", "rendered": "<h4 class='item'>let <$>: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#module-Functor\">Functor</a>.<a href=\"./api/Relude_AsyncData.html#type-Functor.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a => 'b), <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Monad.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Monad.t", "title": "Monad.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('a => 'b), <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Applicative.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map5", "title": "map5", "contents": "map5      t t t t t t      ", "rendered": "<h4 class='item'>let map5: (\n  ('a, 'b, 'c, 'd, 'e) => 'f,\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('d),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('e)\n) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('f)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map4", "title": "map4", "contents": "map4     t t t t t     ", "rendered": "<h4 class='item'>let map4: (\n  ('a, 'b, 'c, 'd) => 'e,\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c),\n  <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('d)\n) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('e)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map3", "title": "map3", "contents": "map3    t t t t    ", "rendered": "<h4 class='item'>let map3: (('a, 'b, 'c) => 'd, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('d)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map2", "title": "map2", "contents": "map2   t t t   ", "rendered": "<h4 class='item'>let map2: (('a, 'b) => 'c, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('c)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a => 'a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Apply.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Apply.t", "title": "Apply.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Alt.alt", "title": "Alt.alt", "contents": "alt t t t  ", "rendered": "<h4 class='item'>let alt: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Alt.map", "title": "Alt.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-Alt.t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-Alt.t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Alt.t", "title": "Alt.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Alt", "title": "Alt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Alt", "title": "Alt", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Alt", "title": "Alt", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-Functor.t", "title": "Functor.t", "contents": "t t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a => 'b), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-alt", "title": "alt", "contents": "alt t t t  ", "rendered": "<h4 class='item'>let alt: (<a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a), <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)) => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('b)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-complete", "title": "complete", "contents": "complete t ", "rendered": "<h4 class='item'>let complete: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-reloading", "title": "reloading", "contents": "reloading t ", "rendered": "<h4 class='item'>let reloading: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-loading", "title": "loading", "contents": "loading t", "rendered": "<h4 class='item'>let loading: <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-init", "title": "init", "contents": "init t", "rendered": "<h4 class='item'>let init: <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_AsyncData.html#type-t\">t</a>('a)</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#type-t", "title": "t", "contents": "t ", "rendered": "<h4 class='item'>type t('a) = | Init | Loading | Reloading('a) | Complete('a)\n</h4>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html", "title": "Relude_AsyncData", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html", "title": "Relude_AsyncData", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_AsyncData.html#Relude_AsyncData", "title": "Relude_AsyncData", "contents": "", "rendered": "", "breadcrumb": "Relude_AsyncData"},
{"href": "./api/Relude_Array.html#value-IsoList.toList", "title": "IsoList.toList", "contents": "toList array list ", "rendered": "<h4 class='item'>let toList: array('a) => list('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-IsoList.fromList", "title": "IsoList.fromList", "contents": "fromList list array ", "rendered": "<h4 class='item'>let fromList: list('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-IsoList.t", "title": "IsoList.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-IsoList", "title": "IsoList", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-IsoList", "title": "IsoList", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.mkString", "title": "Sequence.mkString", "contents": "mkString string array string string  ", "rendered": "<h4 class='item'>let mkString: (string, array(string)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.showF", "title": "Sequence.showF", "contents": "showF string  array string  ", "rendered": "<h4 class='item'>let showF: ('a => string, array('a)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.eqF", "title": "Sequence.eqF", "contents": "eqF bool   array array bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, array('a), array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.tailOrEmpty", "title": "Sequence.tailOrEmpty", "contents": "tailOrEmpty array array ", "rendered": "<h4 class='item'>let tailOrEmpty: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.tail", "title": "Sequence.tail", "contents": "tail array option array ", "rendered": "<h4 class='item'>let tail: array('a) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.head", "title": "Sequence.head", "contents": "head array option ", "rendered": "<h4 class='item'>let head: array('a) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.isNotEmpty", "title": "Sequence.isNotEmpty", "contents": "isNotEmpty array bool ", "rendered": "<h4 class='item'>let isNotEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.isEmpty", "title": "Sequence.isEmpty", "contents": "isEmpty array bool ", "rendered": "<h4 class='item'>let isEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-Sequence.length", "title": "Sequence.length", "contents": "length array int ", "rendered": "<h4 class='item'>let length: array('a) => int</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-Sequence.t", "title": "Sequence.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-Sequence", "title": "Sequence", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-Sequence", "title": "Sequence", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-MonoidAny.empty", "title": "MonoidAny.empty", "contents": "empty array", "rendered": "<h4 class='item'>let empty: array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-MonoidAny.append", "title": "MonoidAny.append", "contents": "append t t t  ", "rendered": "<h4 class='item'>let append: (<a href=\"./api/Relude_Array.html#type-MonoidAny.t\">t</a>('a), <a href=\"./api/Relude_Array.html#type-MonoidAny.t\">t</a>('a)) => <a href=\"./api/Relude_Array.html#type-MonoidAny.t\">t</a>('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-MonoidAny.t", "title": "MonoidAny.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-MonoidAny", "title": "MonoidAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-MonoidAny", "title": "MonoidAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-SemigroupAny.append", "title": "SemigroupAny.append", "contents": "append array array array  ", "rendered": "<h4 class='item'>let append: (array('a), array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#type-SemigroupAny.t", "title": "SemigroupAny.t", "contents": "t array", "rendered": "<h4 class='item'>type t('a) = array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#module-SemigroupAny", "title": "SemigroupAny", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-show", "title": "show", "contents": "show array string  ", "rendered": "<h4 class='item'>let show: (\n  (module BsAbstract.Interface.SHOW with type t = 'b),\n  array('a)\n) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-showF", "title": "showF", "contents": "showF string  array string  ", "rendered": "<h4 class='item'>let showF: ('a => string, array('a)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-eq", "title": "eq", "contents": "eq array array bool   ", "rendered": "<h4 class='item'>let eq: (\n  (module BsAbstract.Interface.EQ with type t = 'a),\n  array('a),\n  array('a)\n) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-eqF", "title": "eqF", "contents": "eqF bool   array array bool   ", "rendered": "<h4 class='item'>let eqF: (('a, 'a) => bool, array('a), array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-mkString", "title": "mkString", "contents": "mkString string array string string  ", "rendered": "<h4 class='item'>let mkString: (string, array(string)) => string</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-toList", "title": "toList", "contents": "toList array list ", "rendered": "<h4 class='item'>let toList: array('a) => list('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-fromList", "title": "fromList", "contents": "fromList list array ", "rendered": "<h4 class='item'>let fromList: list('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-flatten", "title": "flatten", "contents": "flatten array array array ", "rendered": "<h4 class='item'>let flatten: array(array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-flatMap", "title": "flatMap", "contents": "flatMap array  array array  ", "rendered": "<h4 class='item'>let flatMap: ('a => array('b), array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-bind", "title": "bind", "contents": "bind array array  array  ", "rendered": "<h4 class='item'>let bind: (array('a), 'a => array('b)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-apply", "title": "apply", "contents": "apply array  array array  ", "rendered": "<h4 class='item'>let apply: (array('a => 'b), array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-forEachWithIndex", "title": "forEachWithIndex", "contents": "forEachWithIndex int int unit   array int unit  ", "rendered": "<h4 class='item'>let forEachWithIndex: (\n  (int, int) => unit,\n  array(int)\n) => unit</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-forEach", "title": "forEach", "contents": "forEach unit  array unit  ", "rendered": "<h4 class='item'>let forEach: ('a => unit, array('a)) => unit</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-mapWithIndex", "title": "mapWithIndex", "contents": "mapWithIndex int int   array int array  ", "rendered": "<h4 class='item'>let mapWithIndex: ((int, int) => 'b, array(int)) => array(\n  'b\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-map", "title": "map", "contents": "map  array array  ", "rendered": "<h4 class='item'>let map: ('a => 'b, array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-distinct", "title": "distinct", "contents": "distinct bool   array array  ", "rendered": "<h4 class='item'>let distinct: (('a, 'a) => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-all", "title": "all", "contents": "all bool  array bool  ", "rendered": "<h4 class='item'>let all: ('a => bool, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-indexOf", "title": "indexOf", "contents": "indexOf bool   array option int   ", "rendered": "<h4 class='item'>let indexOf: (('a, 'a) => bool, 'a, array('a)) => option(\n  int\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-contains", "title": "contains", "contents": "contains bool   array bool   ", "rendered": "<h4 class='item'>let contains: (('a, 'a) => bool, 'a, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-any", "title": "any", "contents": "any bool  array bool  ", "rendered": "<h4 class='item'>let any: ('a => bool, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-reverse", "title": "reverse", "contents": "reverse array array ", "rendered": "<h4 class='item'>let reverse: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-shuffleInPlace", "title": "shuffleInPlace", "contents": "shuffleInPlace array array ", "rendered": "<h4 class='item'>let shuffleInPlace: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-sort", "title": "sort", "contents": "sort BsAbstract Interface ordering   array array  ", "rendered": "<h4 class='item'>let sort: (\n  ('a, 'a) => BsAbstract.Interface.ordering,\n  array('a)\n) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-sortWithInt", "title": "sortWithInt", "contents": "sortWithInt int   array array  ", "rendered": "<h4 class='item'>let sortWithInt: (('a, 'a) => int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-unzip", "title": "unzip", "contents": "unzip array array array ", "rendered": "<h4 class='item'>let unzip: array(('a, 'b)) => (array('a), array('b))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-zipWithIndex", "title": "zipWithIndex", "contents": "zipWithIndex array array int ", "rendered": "<h4 class='item'>let zipWithIndex: array('a) => array(('a, int))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-zipWith", "title": "zipWith", "contents": "zipWith   array array array   ", "rendered": "<h4 class='item'>let zipWith: (\n  ('a, 'b) => 'c,\n  array('a),\n  array('b)\n) => array('c)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-zip", "title": "zip", "contents": "zip array array array  ", "rendered": "<h4 class='item'>let zip: (array('a), array('b)) => array(('a, 'b))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-replicate", "title": "replicate", "contents": "replicate int array array  ", "rendered": "<h4 class='item'>let replicate: (int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-intersperse", "title": "intersperse", "contents": "intersperse array array  ", "rendered": "<h4 class='item'>let intersperse: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-prependToAll", "title": "prependToAll", "contents": "prependToAll array array  ", "rendered": "<h4 class='item'>let prependToAll: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-splitAt", "title": "splitAt", "contents": "splitAt int array option array array  ", "rendered": "<h4 class='item'>let splitAt: (int, array('a)) => option(\n  (array('a), array('a))\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-partition", "title": "partition", "contents": "partition bool  array array array  ", "rendered": "<h4 class='item'>let partition: ('a => bool, array('a)) => (\n  array('a),\n  array('a)\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-findWithIndex", "title": "findWithIndex", "contents": "findWithIndex int bool   array option  ", "rendered": "<h4 class='item'>let findWithIndex: (('a, int) => bool, array('a)) => option(\n  'a\n)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-find", "title": "find", "contents": "find bool  array option  ", "rendered": "<h4 class='item'>let find: ('a => bool, array('a)) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-filterWithIndex", "title": "filterWithIndex", "contents": "filterWithIndex int bool   array array  ", "rendered": "<h4 class='item'>let filterWithIndex: (\n  ('a, int) => bool,\n  array('a)\n) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-filter", "title": "filter", "contents": "filter bool  array array  ", "rendered": "<h4 class='item'>let filter: ('a => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-dropWhile", "title": "dropWhile", "contents": "dropWhile bool  array array  ", "rendered": "<h4 class='item'>let dropWhile: ('a => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-dropUpTo", "title": "dropUpTo", "contents": "dropUpTo int array array  ", "rendered": "<h4 class='item'>let dropUpTo: (int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-drop", "title": "drop", "contents": "drop int array option array  ", "rendered": "<h4 class='item'>let drop: (int, array('a)) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-takeWhile", "title": "takeWhile", "contents": "takeWhile bool  array array  ", "rendered": "<h4 class='item'>let takeWhile: ('a => bool, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-takeUpTo", "title": "takeUpTo", "contents": "takeUpTo int array array  ", "rendered": "<h4 class='item'>let takeUpTo: (int, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-take", "title": "take", "contents": "take int array option array  ", "rendered": "<h4 class='item'>let take: (int, array('a)) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-last", "title": "last", "contents": "last array option ", "rendered": "<h4 class='item'>let last: array('a) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-init", "title": "init", "contents": "init array option array ", "rendered": "<h4 class='item'>let init: array('a) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-tailOrEmpty", "title": "tailOrEmpty", "contents": "tailOrEmpty array array ", "rendered": "<h4 class='item'>let tailOrEmpty: array('a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-tail", "title": "tail", "contents": "tail array option array ", "rendered": "<h4 class='item'>let tail: array('a) => option(array('a))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-head", "title": "head", "contents": "head array option ", "rendered": "<h4 class='item'>let head: array('a) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-set", "title": "set", "contents": "set int array bool   ", "rendered": "<h4 class='item'>let set: (int, 'a, array('a)) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-get", "title": "get", "contents": "get int array option  ", "rendered": "<h4 class='item'>let get: (int, array('a)) => option('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-scanRight", "title": "scanRight", "contents": "scanRight   array array   ", "rendered": "<h4 class='item'>let scanRight: (('a, 'b) => 'b, 'b, array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-scanLeft", "title": "scanLeft", "contents": "scanLeft   array array   ", "rendered": "<h4 class='item'>let scanLeft: (('b, 'a) => 'b, 'b, array('a)) => array('b)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-foldRight", "title": "foldRight", "contents": "foldRight   array   ", "rendered": "<h4 class='item'>let foldRight: (('a, 'b) => 'b, 'b, array('a)) => 'b</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-foldLeft", "title": "foldLeft", "contents": "foldLeft   array   ", "rendered": "<h4 class='item'>let foldLeft: (('b, 'a) => 'b, 'b, array('a)) => 'b</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-append", "title": "append", "contents": "append array array  ", "rendered": "<h4 class='item'>let append: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-prepend", "title": "prepend", "contents": "prepend array array  ", "rendered": "<h4 class='item'>let prepend: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-uncons", "title": "uncons", "contents": "uncons array option array ", "rendered": "<h4 class='item'>let uncons: array('a) => option(('a, array('a)))</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-cons", "title": "cons", "contents": "cons array array  ", "rendered": "<h4 class='item'>let cons: ('a, array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-concat", "title": "concat", "contents": "concat array array array  ", "rendered": "<h4 class='item'>let concat: (array('a), array('a)) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-makeWithIndex", "title": "makeWithIndex", "contents": "makeWithIndex int int  array  ", "rendered": "<h4 class='item'>let makeWithIndex: (int, int => 'a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-repeat", "title": "repeat", "contents": "repeat int array  ", "rendered": "<h4 class='item'>let repeat: (int, 'a) => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-one", "title": "one", "contents": "one array ", "rendered": "<h4 class='item'>let one: 'a => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-pure", "title": "pure", "contents": "pure array ", "rendered": "<h4 class='item'>let pure: 'a => array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-empty", "title": "empty", "contents": "empty array", "rendered": "<h4 class='item'>let empty: array('a)</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-isNotEmpty", "title": "isNotEmpty", "contents": "isNotEmpty array bool ", "rendered": "<h4 class='item'>let isNotEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-isEmpty", "title": "isEmpty", "contents": "isEmpty array bool ", "rendered": "<h4 class='item'>let isEmpty: array('a) => bool</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#value-length", "title": "length", "contents": "length array int ", "rendered": "<h4 class='item'>let length: array('a) => int</h4>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html", "title": "Relude_Array", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html", "title": "Relude_Array", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Array.html#Relude_Array", "title": "Relude_Array", "contents": "", "rendered": "", "breadcrumb": "Relude_Array"},
{"href": "./api/Relude_Aff.html#type-JsExn.ErrorType.t", "title": "JsExn.ErrorType.t", "contents": "t Js Exn t", "rendered": "<h4 class='item'>type t = Js.Exn.t</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn.ErrorType", "title": "JsExn.ErrorType", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn.ErrorType", "title": "JsExn.ErrorType", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn", "title": "JsExn", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-JsExn", "title": "JsExn", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Infix", "title": "Infix", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Infix", "title": "Infix", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.flat_map", "title": "Monad.flat_map", "contents": "flat_map t t  t  ", "rendered": "<h4 class='item'>let flat_map: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a), 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.pure", "title": "Monad.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => t('a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.apply", "title": "Monad.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Monad.map", "title": "Monad.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Monad.t", "title": "Monad.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Monad", "title": "Monad", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Monad", "title": "Monad", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Applicative.pure", "title": "Applicative.pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Applicative.apply", "title": "Applicative.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (t('a => 'b), t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Applicative.map", "title": "Applicative.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Applicative.t", "title": "Applicative.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Applicative", "title": "Applicative", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Applicative", "title": "Applicative", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Apply.apply", "title": "Apply.apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a => 'a, 'a), <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Apply.map", "title": "Apply.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, t('a)) => t('b)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Apply.t", "title": "Apply.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Apply", "title": "Apply", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Apply", "title": "Apply", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-Functor.map", "title": "Functor.map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'a, <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'a)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-Functor.t", "title": "Functor.t", "contents": "t t Error t", "rendered": "<h4 class='item'>type t('a) = <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Error.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Functor", "title": "Functor", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#module-Functor", "title": "Functor", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-flatMap", "title": "flatMap", "contents": "flatMap t  t t  ", "rendered": "<h4 class='item'>let flatMap: ('a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e), <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-bind", "title": "bind", "contents": "bind t t  t  ", "rendered": "<h4 class='item'>let bind: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e), 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-apply", "title": "apply", "contents": "apply t  t t  ", "rendered": "<h4 class='item'>let apply: (<a href=\"./api/Relude_Aff.html#type-t\">t</a>('a => 'b, 'e), <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-voidError", "title": "voidError", "contents": "voidError t t unit ", "rendered": "<h4 class='item'>let voidError: <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e1) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, unit)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-mapError", "title": "mapError", "contents": "mapError  t t  ", "rendered": "<h4 class='item'>let mapError: ('e1 => 'e2, <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e1)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e2)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-map", "title": "map", "contents": "map  t t  ", "rendered": "<h4 class='item'>let map: ('a => 'b, <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('b, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromEffAttemptJS", "title": "fromEffAttemptJS", "contents": "fromEffAttemptJS Relude_Eff t Belt Result t Js Exn t t Js Exn t ", "rendered": "<h4 class='item'>let fromEffAttemptJS: <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>(\n  Belt.Result.t('a, Js.Exn.t)\n) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, Js.Exn.t)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromEff", "title": "fromEff", "contents": "fromEff Relude_Eff t t ", "rendered": "<h4 class='item'>let fromEff: <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>('a) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromResult", "title": "fromResult", "contents": "fromResult Belt Result t t ", "rendered": "<h4 class='item'>let fromResult: Belt.Result.t('a, 'e) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-fromOption", "title": "fromOption", "contents": "fromOption option t  ", "rendered": "<h4 class='item'>let fromOption: ('e, option('a)) => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-error", "title": "error", "contents": "error t ", "rendered": "<h4 class='item'>let error: 'e => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-ok", "title": "ok", "contents": "ok t ", "rendered": "<h4 class='item'>let ok: 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-pure", "title": "pure", "contents": "pure t ", "rendered": "<h4 class='item'>let pure: 'a => <a href=\"./api/Relude_Aff.html#type-t\">t</a>('a, 'e)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#value-run", "title": "run", "contents": "run t unit unit ", "rendered": "<h4 class='item'>let run: <a href=\"./api/Relude_Aff.html#type-t\">t</a>(unit, 'e) => unit</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#type-t", "title": "t", "contents": "t Belt Result t Relude_Eff t unit  Relude_Eff t unit ", "rendered": "<h4 class='item'>type t('a, 'e) = Belt.Result.t('a, 'e) => <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>(\n  unit\n) => <a href=\"./api/Relude_Eff.html\">Relude_Eff</a>.<a href=\"./api/Relude_Eff.html#type-t\">t</a>(unit)</h4>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html", "title": "Relude_Aff", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html", "title": "Relude_Aff", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude_Aff.html#Relude_Aff", "title": "Relude_Aff", "contents": "", "rendered": "", "breadcrumb": "Relude_Aff"},
{"href": "./api/Relude.html", "title": "Relude", "contents": "@rest", "rendered": "@rest", "breadcrumb": "Relude"},
{"href": "./api/Relude.html", "title": "Relude", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "Relude"},
{"href": "./api/Relude.html#Relude", "title": "Relude", "contents": "", "rendered": "", "breadcrumb": "Relude"}]